<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Relativity.Services.Interfaces</name>
    </assembly>
    <members>
        <member name="T:Relativity.Services.Client.IClientModule">
            <summary>
            Client Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Client.IClientManager">
            <summary>
            IClientManager interface enables interaction with Relativity Client.
            </summary>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.CreateSingleAsync(Relativity.Services.Client.Client)">
            <summary>
            Asynchronously creates an instance of Client.
            </summary>
            <param name="clientDTO">Client DTO</param>
            <returns>ArtifactID of the created Client.</returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.QueryAsync(Relativity.Services.Query)">
            <summary>
            Asynchronously query for a collection of Client instances.
            </summary>
            <param name="query">Query</param>
            <returns>A ClientQueryResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.QueryAsync(Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously query for a collection of Client instances.
            </summary>
            <param name="query">Query</param>
            <param name="length">Number of results to return.</param>
            <returns>A ClientQueryResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.QuerySubsetAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously query for a subset of a collection of Client instances.
            </summary>
            <param name="queryToken">Search Query Token</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.ReadSingleAsync(System.Int32)">
            <summary>
            Asynchronously read a instance of Client.
            </summary>
            <param name="clientArtifactID">ArtifactID of the Client to read.</param>
            <returns>A Client</returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.DeleteSingleAsync(System.Int32)">
            <summary>
            Asyncronously deletes an instance of a Client.
            </summary>
            <param name="clientArtifactID">ArtifactID of the Client to delete.</param>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.UpdateSingleAsync(Relativity.Services.Client.Client)">
            <summary>
            Asynchronously updates an instance of Client.
            </summary>
            <param name="clientDTO">Client to Update.</param>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.GetStatusChoicesForClientAsync">
            <summary>
            Get the available status choices.
            </summary>
            <returns>List of available status choices.</returns>
        </member>
        <member name="T:Relativity.Services.Client.ClientQueryResultSet">
            <summary>
            Client Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Field.FieldMetadata">
            <summary>
            Represents basic Field data
            </summary>
        </member>
        <member name="P:Relativity.Services.Field.FieldMetadata.FieldType">
            <summary>
            The type of the field
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown">
            <summary>
            Metadata for a dashboard, for summary display in dropdown widgets on the site.
            </summary>
        </member>
        <member name="M:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown"/> class.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.ArtifactId">
            <summary>
            ArtifactId identifier for the dashboard.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.Name">
            <summary>
            Dashboard name.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.Order">
            <summary>
            Sort order of the dashboard.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.Permissions">
            <summary>
            Permissions set for the dashboard.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.AssociatedLockedApplications">
            <summary>
            List of applications to which a dashboard is associated where the application is locked. Empty or has content; never null.
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType">
            <summary>
            Represents permisisons associated with an 
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.View">
            <summary>
            Permission to view
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.Edit">
            <summary>
            Permission to Edit
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.Delete">
            <summary>
            Permission to Delete
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.Secure">
            <summary>
            Permission to Secure
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.Add">
            <summary>
            Permission to Add
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.ItemListView.WorkspaceTabListPageUrl">
            <summary>
            Data requared in Fluid item list of workspaces to know if link to default tab of workspace is one of Fluid list page or not.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.WorkspaceTabListPageUrl.CanRedirectToListPage">
            <summary>
            Indicates if Url is a link to Fluid list page(True) or not(False)
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.WorkspaceTabListPageUrl.Url">
            <summary>
            Link to Fluid list page or NULL(if CanRredirectToListPage = False)
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults.RunID">
            <summary>
            The UUID that identifies an active export run
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults.RecordCount">
            <summary>
            The number of records intialized and ready for export,
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults.FieldData">
            <summary>
            The list of fields to be exported
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.UniqueFieldValuesResult">
            <summary>
            Represents the results of a query for unique field values.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.UniqueFieldValuesResult.FieldName">
            <summary>
            Gets or sets the name of the field that was queried.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.UniqueFieldValuesResult.MaxNumberOfValuesReached">
            <summary>
            Gets or sets a bool indicating whether the number of values returned by the query reaches the maximum.
            </summary>
            <remarks>
            The MaxNumberOfValuesReached property references the  number of values specified in the DistinctBuilderMaxValue instance setting. 
            This setting is located in the Relativity.Data section of the Instance Settings table.
            </remarks>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.UniqueFieldValuesResult.UniqueValues">
            <summary>
            Gets or sets the unique values for the queried field.
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.FailedApplicationInstall">
            <summary>
            Represents the failed application install info
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.FailedApplicationInstall.ApplicationInstallID">
            <summary>
            Id of failed application install
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.FailedApplicationInstall.ApplicationName">
            <summary>
            Name of failed application
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.WorkspaceUpgradeQueueCode">
            <summary>
            Represents the code used in Workspcae Upgrade Queue
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.WorkspaceUpgradeQueueCode.Id">
            <summary>
            Id of code
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.WorkspaceUpgradeQueueCode.Name">
            <summary>
            Code name
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.OCRQueueStatus">
            <summary>
            Represents the status of OCR queue item with name
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.OCRQueueStatus.Id">
            <summary>
            Id of status
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.OCRQueueStatus.Name">
            <summary>
            Status name
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.BrandingQueueStatus">
            <summary>
            Represents the status of Branding queue item with name
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.BrandingQueueStatus.Id">
            <summary>
            Id of status
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.BrandingQueueStatus.Name">
            <summary>
            Status name
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.BrandingQueueStatusEnum">
            <summary>
            Represents the status of Branding queue item
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.ProgressReport">
            <summary>
            Represents a snap shot report of progress in a Kepler service
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ProgressReport.Message">
            <summary>
            Detailed message describing the current state of progress.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ProgressReport.CompletedSteps">
            <summary>
            Number of completed steps of the total service operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ProgressReport.TotalSteps">
            <summary>
            Number of total steps of the total service operation.
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.View">
            <summary>
            Data required by Fluid List View to display the currently active view
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.Name">
            <summary>
            Name of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.ArtifactId">
            <summary>
            ArtifactID of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.FieldsIds">
            <summary>
            Ordered array of field ids
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.Sorts">
            <summary>
            List of sort conditions
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.RenderLinks">
            <summary>
            Whether links should be rendered or not
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.HasConditions">
            <summary>
            Whether the View has any criteria
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.GroupDefinitionFieldName">
            <summary>
            The name of the GroupDefinitionField associated with the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.QueryHint">
            <summary>
            The query hint.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.DashboardArtifactId">
            <summary>
            Artifact ID, if any, of the Dashboard associated with the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.AllConditionCount">
            <summary>
            All view conditions count
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.SavedSearchConditionCount">
            <summary>
            SavedSearch condition count(condition with operator 'in')
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.ViewDataForDropdown">
            <summary>
            Data required by Fluid List View to appropriate populate the a view within the views dropdown.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewDataForDropdown.Name">
            <summary>
            Name of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewDataForDropdown.ArtifactId">
            <summary>
            ArtifactID of the ItemListView
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Relativity.Services.ItemListView.ViewDataForDropdown.Permissions" -->
        <member name="P:Relativity.Services.ItemListView.ObjectRule.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ObjectRule.TypeId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ObjectRule.Action">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ObjectRule.ParentObjectArtifactTypeId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewResultSet.ActiveView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewResultSet.Views">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewResultSet.FieldCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewResultSet.ViewFieldWidthCollection">
            <summary>
            Gets or sets the view field width collection.
            </summary>
            <value>
            The view field width collection.
            </value>
        </member>
        <member name="T:Relativity.Services.ItemListView.ItemListViewResultSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.Success">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.Message">
            <summary>
            Populated with error message, if any.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.Views">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.FieldCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.ViewFieldWidthCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.ItemListFieldRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AllowHtml">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AvfID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.ColumnName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.ConnectorFieldArtifactID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.SourceFieldArtifactGuids">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.HeaderName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.TrueValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FalseValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FieldTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FormatString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.ItemListType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsLinked">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsFilterable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsSortable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsSystem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsReflected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsRelational">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FriendlyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.MaxLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.StaticText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.Wrapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.DataGridEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FilterType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IncludeInTextIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.PopupPickerView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FieldTreeView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AssociativeObjectTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.Category">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AllowGroupBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AllowPivot">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsVisible">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.ItemListView">
            <summary>
            Represents Relativity View without any filter conditions.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.Name">
            <summary>
            Name of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.ArtifactId">
            <summary>
            ArtifactID of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.Order">
            <summary>
            Order of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.FieldsIds">
            <summary>
            Ordered array of field ids
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.Sorts">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.RenderLinks">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.HasConditions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.HasPermissionToEdit">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.Folder.FolderMoveResultSet">
            <summary>
            Represents the output of a folder move operation, including status information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Folder.FolderMoveResultSet.TotalOperations">
            <summary>
            Gets the number of operations needed to be executed to move the folder and its contents.
            </summary>
        </member>
        <member name="T:Relativity.Services.Folder.FolderResultSet">
            <summary>
            The output of a call to a mass process method.
            </summary>
        </member>
        <member name="T:Relativity.Services.Folder.IFolderModule">
            <summary>
            Folder Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Folder.IFolderManager">
            <summary>
            IFolderManager interface enables interaction with Folders.
            </summary>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.CreateSingleAsync(System.Int32,Relativity.Services.Folder.Folder)">
            <summary>
            Asynchronously creates an instance of Folder.
            </summary>
            <param name="workspaceArtifactID">The workspace artifact identifier.</param>
            <param name="model">The folder DTO.</param>
            <returns>
            ArtifactID of the created Folder.
            </returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.UpdateSingleAsync(System.Int32,Relativity.Services.Folder.Folder)">
            <summary>
            Asynchronously updates an instance of Folder.
            </summary>
            <param name="workspaceArtifactID">The workspace artifact identifier.</param>
            <param name="model">The model.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Asynchronously query for a collection of Folder instances.
            </summary>
            <param name="query">Query</param>
            <returns>A FolderResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously query for a collection of Folder instances.
            </summary>
            <param name="query">Query</param>
            <param name="length">Number of results to return.</param>
            <returns>A FolderResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.QuerySubsetAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously query for a subset of a collection of Folder instances.
            </summary>
            <param name="queryToken">Search Query Token</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetWorkspaceRootAsync(System.Int32)">
            <summary>
            Retrieves a workplace root folder
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <returns>Folder</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetChildrenAsync(System.Int32,System.Int32)">
            <summary>
            Returns all child elements of the specified Folder
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <param name="parentId">ArtifactID of the parent</param>
            <returns>List of child Folders</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFullPathListAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Retrieves the full path list.
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <param name="artifactIDs">The List of ArtifactID.</param>
            <returns>
            List of Folder path
            </returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFolderTreeAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Returns the folder structure with expanded nodes
            </summary>
            <param name="workspaceArtifactId">ArtifactID of the workspace</param>
            <param name="expandedNodes">ArrayList of ArtifactIDs of folders that are expanded</param>
            <returns>List of folders</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFolderTreeAsync(System.Int32,System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Returns the folder structure with expanded nodes
            </summary>
            <param name="workspaceArtifactId">ArtifactID of the workspace</param>
            <param name="expandedNodes">ArrayList of ArtifactIDs of folders that are expanded</param>
            <param name="selectedFolderId">ArtifactID of the selected folder</param>
            <returns>List of folders</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFilteredFolderTreeAsync(System.Int32,System.String)">
            <summary>
            Asynchronously gets the tree of folders matching the search condition specified as a query string.
            </summary>
            <param name="workspaceArtifactId">Workspace the tree of Search Containers is under.</param>
            <param name="searchCondition">Search keyword for tree nodes to be matched against.</param>
            <returns>A collection of Folder nodes matching provided search conditions.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.DeleteUnusedFoldersAsync(System.Int32)">
            <summary>
            Asynchronously deletes any folders in the workspace which do not contain any documents or sub-folders with documents.
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <returns>FolderResultSet of the folders which were deleted.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.DeleteUnusedFoldersAsync(System.Int32,System.IProgress{Relativity.Services.ProcessStateProgress})">
            <summary>
            Asynchronously deletes any folders in the workspace which do not contain any documents or sub-folders with documents while reporting progress.
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <returns>FolderResultSet of the folders which were deleted.</returns>
            <param name="progress">Progress object.</param>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFolderTreeWithAncestorsAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Returns expanded folder structer 
            </summary>
            <param name="workspaceArtifactID"></param>
            <param name="artifactIDs"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetAccessStatusAsync(System.Int32,System.Int32)">
            <summary>
            Returns folder status: folder exists, hasn't moved and has view permission.
            </summary>
            <param name="workspaceArtifactID">Current workspace artifact ID.</param>
            <param name="artifactID">Folder artifact ID</param>
            <returns>Returns object of FolderStatus type, where Exists property will be true if folder with artifactID exists and CanView will be true 
            if current user still have view permission.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.MoveFolderAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing folder and its children, including subfolders and documents.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the folder.</param>
            <param name="artifactID">The Artifact ID of folder to be moved.</param>
            <param name="destinationFolderID">The Artifact ID of the destination folder.</param>
            <returns>A FolderMoveResultSet object containing status information about the folder being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.MoveFolderAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing folder and its children, including subfolders and documents.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the folder.</param>
            <param name="artifactID">The Artifact ID of folder to be moved.</param>
            <param name="destinationFolderID">The Artifact ID of the destination folder.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A FolderMoveResultSet object containing status information about the folder being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.MoveFolderAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing folder and its children, including subfolders and documents.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the folder.</param>
            <param name="artifactID">The Artifact ID of folder to be moved.</param>
            <param name="destinationFolderID">The Artifact ID of the destination folder.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the folder is moving.</param>
            <returns>A FolderMoveResultSet object containing status information about the folder being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.MoveFolderAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing folder and its children, including subfolders and documents.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the folder.</param>
            <param name="artifactID">The Artifact ID of folder to be moved.</param>
            <param name="destinationFolderID">The Artifact ID of the destination folder.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the folder is moving.</param>
            <returns>A FolderMoveResultSet object containing status information about the folder being moved.</returns>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryResultSet.Success">
            <summary>
            True if object query execution was a success.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryResultSet.Message">
            <summary>
            Exception details if the query exection fails due to a server side error.  Otherwise "SUCCESS".
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryResultSet.Data">
            <summary>
            The query results.
            </summary>
        </member>
        <member name="T:Relativity.Services.ObjectQuery.ObjectQueryUniqueFieldValuesResult">
            <summary>
            Represents the results of a query for unique field values.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryUniqueFieldValuesResult.FieldName">
            <summary>
            Gets or sets the name of the field that was queried.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryUniqueFieldValuesResult.MaxNumberOfValuesReached">
            <summary>
            Gets or sets a bool indicating whether the number of values returned by the query reaches the maximum.
            </summary>
            <remarks>
            The MaxNumberOfValuesReached property references the  number of values specified in the DistinctBuilderMaxValue instance setting. This setting is located in the Relativity.Data section of the Instance Settings table.
            </remarks>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryUniqueFieldValuesResult.UniqueValues">
            <summary>
            Gets or sets the unique values for the queried field.
            </summary>
        </member>
        <member name="T:Relativity.Services.ObjectQuery.SearchProviderCondition">
            <summary>
            Contains the necessary parameters to execute a Search Provider search.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.SearchProviderCondition.SearchProviderArtifactId">
            <summary>
            Artifact ID of the Search Provider
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.SearchProviderCondition.Input">
            <summary>
            Value returned by the registered javascript function of a fully HTML UI Search Provider in order to retrieve the user's search parameters entered into the Search Provider's markup/form.
            This must be a valid value to be passed into the SearchProvider's ISearchProviderGateway.HydrateInputData() function.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.QueryDataItemResult.Permissions">
            <summary>
            List of granted permission types for this data item.
            </summary>
        </member>
        <member name="T:Relativity.Services.ObjectQuery.Query">
            <summary>
            Describes conditions, sorts and fields to be returned for an ObjectQueryManager.Query call
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.Fields">
            <summary>
            Fields to be included in the query results.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.Condition">
            <summary>
            Gets or sets the search critera.  This can be a simple, single-field condition or a more complex criteria expression by combining conditions together.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.Sorts">
            <summary>
            Represents an array of fields. You indicate the sort order by specifying ASC or DESC after the field name, such as Relativity Text Identifier ASC. By default, ASC is the sort order on a field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.RelationalField">
            <summary>
            Represents a string identifying a relational field. A query containing a relational field returns any matching fields and all documents that share this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.RowCondition">
            <summary>
            Gets or sets the row condition criteria. This can be a simple, single-field condition or a more complex criteria expression by combining conditions together.
            This criteria will limit the result set returned after applying all other conditions and including the relational field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.SearchProviderCondition">
            <summary>
            Contains the necessary parameters to execute a Search Provider search.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.IsAdHocQuery">
            <summary>
            Determines whether or not the query is to be run as a built in saved search query or an ad hoc query.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.ExecutingSavedSearchId">
            <summary>
            ID of the currently executing saved search.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.ExecutingViewId">
            <summary>
            ID of the currently executing view.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.ActiveArtifactId">
            <summary>
            Result page criterion to override start position if available in query results.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.RankSortOrder">
            <summary>
            Sorting direction ASC or DESC of the Rank column
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.QueryHint">
            <summary>
            Gets or sets the QueryHint of the currently executing search. It is used to optimize the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.WorkspaceId">
            <summary>
            Id of the workspace which contains the query result artifacts.  If artifacts belong to the admin level, this value will equal -1.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.ArtifactTypeName">
            <summary>
            Name of artifact type of the query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.ArtifactTypeId">
            <summary>
            Id of artifact type of the query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.ArtifactTypeGuids">
            <summary>
            Guids for the artifact type of the query result artifacts.  Some artifact types will not have a GUID.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.ResultCount">
            <summary>
            Count of return artifacts returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.TotalResultCount">
            <summary>
            Total count of return artifacts in the entire query (Including artifacts that were not returned in this call due to requeseted page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.PreviousPage">
            <summary>
            Generated url of that can be used to retrieve the previous page of query results based on the provided start and pageSize parameters of the query execution.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.NextPage">
            <summary>
            Generated url of that can be used to retrieve the next page of query results based on the provided start and pageSize parameters of the query execution.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.QueryToken">
            <summary>
            Token that can be used to lookup a subset of the cached query.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.Sample">
            <summary>
            Token that can be used to persist an existing sample from one call to the next.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.DataResults">
            <summary>
            Query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.Window">
            <summary>
            Retrieves the set of IDs used to prime the review tool's session.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.RankWindow">
            <summary>
            Retrieves the set of Ranks used to prime the review tool's session.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.Includes">
            <summary>
            Related items are included in the result set based on this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.Name">
            <summary>
            Name of field
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.Value">
            <summary>
            Value of field for artifact.  This value could be one of many types depending on the field type.  For example dates, numbers, or list of other artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.ArtifactId">
            <summary>
            ArtifactId of field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.ArtifactGuids">
            <summary>
            List of Guids for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.FieldType">
            <summary>
            Field type (i.e. fixed-length text, multi-object). If the field is a reflected field, this value will represent the field type of the reflected field of the associated object.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactId">
            <summary>
            Artifact ID of artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactGuids">
            <summary>
            Artifact Guids of artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.TextIdentifier">
            <summary>
            Text identifier of artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactTypeId">
            <summary>
            Artifact Type Id of the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactTypeGuids">
            <summary>
            List of Guids for the Artifact Type
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactTypeName">
            <summary>
            Name of the Artifact Type
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ParentArtifactId">
            <summary>
            The ArtifactId for the parent of the artifact
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.WorkspaceId">
            <summary>
            The WorkspaceId related to the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.Fields">
            <summary>
            List of fields and their values for this artifact.  Only fields provided are those explictly requested during query execution in the query.fields property.
            </summary>
        </member>
        <member name="T:Relativity.Services.ObjectQuery.IObjectQueryManager">
            <summary>
            IObjectQueryManager interface enables querying for Relativity workspace and admin artifacts.
            </summary>
        </member>
        <member name="M:Relativity.Services.ObjectQuery.IObjectQueryManager.QueryAsync(System.Int32,System.Int32,Relativity.Services.ObjectQuery.Query,System.Int32,System.Int32,System.Int32[],System.String)">
            <summary>
            Query Relativity Workspace or Admin Artifacts.
            </summary>
            <param name="workspaceId">Workspace ID of the workspace which contains the intended artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="artifactTypeId">ArtifactTypeId for the artifacts to be queried</param>
            <param name="query">Instance of a Query object which describes the conditions, sorts, and artifact's Fields to be returned in the returned QueryResultSet's results.</param>
            <param name="start">Indicates the requested index of the first artifact in the returned QueryResultSet</param>
            <param name="length">Indiates the number of items requested of the query result, starting with index provided by the start parameter.</param>
            <param name="includePermissions">IDs of permissions to be included per item result.</param>
            <param name="queryToken">Optional query token to be used to look up a previously run query.  If this parameter is supplied, and the corrosponding cached query exists, the query parameter will be ignored and the results will be pulled directly from the already cached query result.</param>
            <returns>Returns either the results of an executed query based on the query parameter, or a subset of a previously run (cached) query referenced by the provided query token</returns>
        </member>
        <member name="M:Relativity.Services.ObjectQuery.IObjectQueryManager.QueryAsync(System.Int32,System.Int32,Relativity.Services.ObjectQuery.Query,System.Int32,System.Int32,System.Int32[],System.String,System.Threading.CancellationToken)">
            <summary>
            Query Relativity Workspace or Admin Artifacts.
            </summary>
            <param name="workspaceId">Workspace ID of the workspace which contains the intended artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="artifactTypeId">ArtifactTypeId for the artifacts to be queried</param>
            <param name="query">Instance of a Query object which describes the conditions, sorts, and artifact's Fields to be returned in the returned QueryResultSet's results.</param>
            <param name="start">Indicates the requested index of the first artifact in the returned QueryResultSet</param>
            <param name="length">Indiates the number of items requested of the query result, starting with index provided by the start parameter.</param>
            <param name="includePermissions">IDs of permissions to be included per item result.</param>
            <param name="queryToken">Optional query token to be used to look up a previously run query.  If this parameter is supplied, and the corrosponding cached query exists, the query parameter will be ignored and the results will be pulled directly from the already cached query result.</param>
            <returns>Returns either the results of an executed query based on the query parameter, or a subset of a previously run (cached) query referenced by the provided query token</returns>
            /// <param name="cancel">Used to request cancel of the object query execution.</param>
        </member>
        <member name="M:Relativity.Services.ObjectQuery.IObjectQueryManager.QueryAsync(System.Int32,System.Int32,Relativity.Services.ObjectQuery.Query,System.Int32,System.Int32,System.Int32[],System.String,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query Relativity Workspace or Admin Artifacts.
            </summary>
            <param name="workspaceId">Workspace ID of the workspace which contains the intended artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="artifactTypeId">ArtifactTypeId for the artifacts to be queried</param>
            <param name="query">Instance of a Query object which describes the conditions, sorts, and artifact's Fields to be returned in the returned QueryResultSet's results.</param>
            <param name="start">Indicates the requested index of the first artifact in the returned QueryResultSet</param>
            <param name="length">Indiates the number of items requested of the query result, starting with index provided by the start parameter.</param>
            <param name="includePermissions">IDs of permissions to be included per item result.</param>
            <param name="queryToken">Optional query token to be used to look up a previously run query.  If this parameter is supplied, and the corrosponding cached query exists, the query parameter will be ignored and the results will be pulled directly from the already cached query result.</param>
            <returns>Returns either the results of an executed query based on the query parameter, or a subset of a previously run (cached) query referenced by the provided query token</returns>
            /// <param name="progress">Contains callback that will report query execution progress.</param>
        </member>
        <member name="M:Relativity.Services.ObjectQuery.IObjectQueryManager.QueryAsync(System.Int32,System.Int32,Relativity.Services.ObjectQuery.Query,System.Int32,System.Int32,System.Int32[],System.String,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query Relativity Workspace or Admin Artifacts.
            </summary>
            <param name="workspaceId">Workspace ID of the workspace which contains the intended artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="artifactTypeId">ArtifactTypeId for the artifacts to be queried</param>
            <param name="query">Instance of a Query object which describes the conditions, sorts, and artifact's Fields to be returned in the returned QueryResultSet's results.</param>
            <param name="start">Indicates the requested index of the first artifact in the returned QueryResultSet</param>
            <param name="length">Indiates the number of items requested of the query result, starting with index provided by the start parameter.</param>
            <param name="includePermissions">IDs of permissions to be included per item result.</param>
            <param name="queryToken">Optional query token to be used to look up a previously run query.  If this parameter is supplied, and the corrosponding cached query exists, the query parameter will be ignored and the results will be pulled directly from the already cached query result.</param>
            <param name="cancel">Used to request cancel of the object query execution.</param>
            /// <param name="progress">Contains callback that will report query execution progress.</param>
            <returns>Returns either the results of an executed query based on the query parameter, or a subset of a previously run (cached) query referenced by the provided query token</returns>
        </member>
        <member name="M:Relativity.Services.ObjectQuery.IObjectQueryManager.QueryUniqueFieldValuesAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Executes a query for unique values in stored in fixed-length text fields.
            </summary>
            <remarks>
            It is recommended that you create an index on the database fields that you want to query.
            </remarks>
            <param name="workspaceId">The Artifact ID of the workspace containing the fields that you want to query on. Pass -1 to query on admin fields.</param>
            <param name="artifactTypeId">The identifier for the Artifact Type of the object associated with the field. See ArtifactType enumeration.</param>
            <param name="fieldName">The name of the fixed-length text field to be queried.</param>
            <returns>A list of unique values for the queried field.</returns>
        </member>
        <member name="M:Relativity.Services.ObjectQuery.IObjectQueryManager.QueryUniqueFieldValuesAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes a query for unique values in stored in fixed-length text fields.
            </summary>
            <remarks>
            It is recommended that you create an index on the database fields that you want to query.
            </remarks>
            <param name="workspaceId">The Artifact ID of the workspace containing the fields that you want to query on. Pass -1 to query on admin fields.</param>
            <param name="artifactTypeId">The identifier for the Artifact Type of the object associated with the field. See ArtifactType enumeration.</param>
            <param name="fieldName">The name of the fixed-length text field to be queried.</param>
            <param name="cancel">A request to cancel the query execution.</param>
            <returns>A list of unique values for the queried field.</returns>
        </member>
        <member name="M:Relativity.Services.ObjectQuery.IObjectQueryManager.QueryUniqueFieldValuesAsync(System.Int32,System.Int32,System.String,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Executes a query for unique values in stored in fixed-length text fields.
            </summary>
            <remarks>
            It is recommended that you create an index on the database fields that you want to query.
            </remarks>
            <param name="workspaceId">The Artifact ID of the workspace containing the fields that you want to query on. Pass -1 to query on admin fields.</param>
            <param name="artifactTypeId">The identifier for the Artifact Type of the object associated with the field. See ArtifactType enumeration.</param>
            <param name="fieldName">The name of the fixed-length text field to be queried.</param>
            <param name="progress">A report of the query execution progress.</param>
            <returns>A list of unique values for the queried field.</returns>
        </member>
        <member name="M:Relativity.Services.ObjectQuery.IObjectQueryManager.QueryUniqueFieldValuesAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Executes a query for unique values in stored in fixed-length text fields.
            </summary>
            <remarks>
            It is recommended that you create an index on the database fields that you want to query.
            </remarks>
            <param name="workspaceId">The Artifact ID of the workspace containing the fields that you want to query on. Pass -1 to query on admin fields.</param>
            <param name="artifactTypeId">The identifier for the Artifact Type of the object associated with the field. See ArtifactType enumeration.</param>
            <param name="fieldName">The name of the fixed-length text field to be queried.</param>
            <param name="cancel">A request to cancel the query execution.</param>
            <param name="progress">A report of the query execution progress.</param>
            <returns>A list of unique values for the queried field.</returns>
        </member>
        <member name="T:Relativity.Services.ObjectQuery.IObjectQueryModule">
            <summary>
            Object Query Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Result.MassProcessResultSetBase">
            <summary>
            Represents the output of a move operation, including status information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Result.MassProcessResultSetBase.ProcessState">
            <summary>
            Gets the state of the mass process.
            </summary>
        </member>
        <member name="P:Relativity.Services.Result.MassProcessResultSetBase.TotalOperations">
            <summary>
            Gets the number of operations needed to be executed to move the object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Result.MassProcessResultSetBase.OperationsCompleted">
            <summary>
            Gets the number of operations that have been executed.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.UserStatusQueryResultSet">
            <summary>
            Represents the output of a User status query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserStatusQueryResultSet.DataResults">
            <summary>
            Query result items.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserStatusQueryResultSet.ResultCount">
            <summary>
            Count of objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserStatusQueryResultSet.TotalResultCount">
            <summary>
            Total count of objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserStatusQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.OCRQueueQueryResultSet">
            <summary>
            Represents the output of a OCR queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.OCRQueueQueryResultSet.DataResults">
            <summary>
            Query result items.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.OCRQueueQueryResultSet.ResultCount">
            <summary>
            Count of objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.OCRQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.OCRQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.PermissionResultSet">
            <summary>
            User permissions for static objects
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.PermissionResultSet.CanChangeQueuePriority">
            <summary>
            Gets or sets if user has permission to change item priority in queue
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.PermissionResultSet.CanAccessServerTab">
            <summary>
            Gets or sets if user has permission to access Servers tab
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.PermissionResultSet.CanForceUserLogout">
            <summary>
            Gets or sets if user has permission to force user logout
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.PermissionResultSet.CanSendMessage">
            <summary>
            Gets or sets if user has permission to send a message
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.BrandingQueueQueryResultSet">
            <summary>
            Represents the output of a Branding queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingQueueQueryResultSet.DataResults">
            <summary>
            Query result items.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingQueueQueryResultSet.ResultCount">
            <summary>
            Count of objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet">
            <summary>
            Represents the output of a Workspace Upgrade queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet.DataResults">
            <summary>
            Query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet.ResultCount">
            <summary>
            Count of return objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of return objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.ProductionQueueQueryResultSet">
            <summary>
            Represents the output of a Production queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionQueueQueryResultSet.DataResults">
            <summary>
            Query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionQueueQueryResultSet.ResultCount">
            <summary>
            Count of return objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of return objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.BrandingSetQueueSubmitter">
            <summary>
            Represents the output of a Branding set queue submitter
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingSetQueueSubmitter.UserID">
            <summary>
            UserID of submitter
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingSetQueueSubmitter.Name">
            <summary>
            Name of submitter
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.StartupInfoResultSet">
            <summary>
            Static Object startup info result set
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.UserSettings">
            <summary>
            Sets or gets User settings. See <see cref="T:Relativity.Services.StaticObject.UserSettingsResult" /> for details
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.Permissions">
            <summary>
            Gets or sets user permissions. See <see cref="T:Relativity.Services.StaticObject.PermissionResultSet"/> for details
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.UserPreferences">
            <summary>
            Gets or sets user preferences unstructured data for static objects
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.ViewFieldWidthCollection">
            <summary>
            Gets or sets the collection of field widths
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.UserSettingsResult">
            <summary>
            Represents user settings for Static Object list view
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserSettingsResult.ItemListPageLength">
            <summary>
            Gets or sets number of items to display in page based on logged in user's setting
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserSettingsResult.ShowFilters">
            <summary>
            Gets or sets whether or not to show filters based on logged in user's setting
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet">
            <summary>
            Represents the output of a Worker Manager Queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet.DataResults">
            <summary>
            Query result items.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet.ResultCount">
            <summary>
            Count of return objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of return objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.ProductionSetQueueSubmitter">
            <summary>
            Represents the output of a Production set queue submitter
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionSetQueueSubmitter.UserID">
            <summary>
            UserID of submitter
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionSetQueueSubmitter.Name">
            <summary>
            Name of submitter
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.AdvancedSearchViewInfo">
            <summary>
            Fields required by advanced search filtering
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.AdvancedSearchViewInfo.HasViewPermission">
            <summary>
            Determines whether the current user has read permissions to current view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.AdvancedSearchViewInfo.FieldNames">
            <summary>
            Avalable Field names in current view.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SavedSearchMoveResultSet">
            <summary>
            Represents the output of a saved search move operation, including status information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchMoveResultSet.TotalOperations">
            <summary>
            Gets the number of operations needed to be executed to move the saved search.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerMoveResultSet">
            <summary>
            Represents the output of a search container move operation, including status information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerMoveResultSet.TotalOperations">
            <summary>
            Gets the number of operations needed to be executed to move the search container.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchAccessStatus">
            <summary>
            Provides information on existence and actions which can be taken on the Saved Search.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchAccessStatus.Exists">
            <summary>
            Gets or sets a value indicating whether Saved Search exists.
            </summary>
            <value>
              <c>true</c> if exists; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.Search.SearchAccessStatus.CanView">
            <summary>
            Gets or sets a value indicating whether Saved Search can be viewed.
            </summary>
            <value>
              <c>true</c> if Saved Search can be viewed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.Search.SearchAccessStatus.CanAccessSearchProvider">
            <summary>
            Gets or sets a value indicating whether Search Provider of Saved Search can be accessed.
            </summary>
            <value>
            <c>true</c> if Search Provider of Saved Search can be accessed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.Search.SearchAccessStatus.CanViewCriteriaFields">
            <summary>
            Gets or sets a value  whether Saved Search criteria fields can be viewed.
            </summary>
            <value>
            <c>true</c> if all Saved Search criteria fields can be viewed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Relativity.Services.Search.AnalyticsSearchQueryResultSet">
            <summary>
            Analytics Search Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.DataGridSearchQueryResultSet">
            <summary>
            DataGrid Search Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.dtSearchQueryResultSet">
            <summary>
            dtSearch Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.KeywordSearchQueryResultSet">
            <summary>
            Keyword Search Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerItemCollection">
            <summary>
            SearchContainer tree information for a given SearchContainer.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.SearchContainerItemCollection.#ctor">
            <summary>
            SearchContainerItemCollection constructor.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItemCollection.SearchContainerItems">
            <summary>
            Collection of SearchContainerItems.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItemCollection.SavedSearchContainerItems">
            <summary>
            Collection of SavedSearchContainerItems.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerItem">
            <summary>
            SearchContainerItem information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItem.SearchContainer">
            <summary>
            SearchContainer reference.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItem.Secured">
            <summary>
            Does this SearchContainer have item level security.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItem.HasChildren">
            <summary>
            Flag indicating if this SearchContainerItem has any children.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItem.ParentContainer">
            <summary>
            Parent Search Container this SearchContainerItem belongs to.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SavedSearchContainerItem">
            <summary>
            SavedSearchContainerItem information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchContainerItem.SavedSearch">
            <summary>
            SavedSearch reference.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchContainerItem.Secured">
            <summary>
            Does this SavedSearch have item level security.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchContainerItem.Personal">
            <summary>
            Does this SavedSearch belong to the current owner.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchContainerItem.ParentContainer">
            <summary>
            Parent Search Container this SavedSearch belongs to.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SavedSearchContainerItemPermissions">
            <summary>
            Permission for saved search item
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerItemPermissions">
            <summary>
            Permissions for search folder item
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerQueryResultSet">
            <summary>
            Search Container Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.IAnalyticsSearchManager">
            <summary>
            IAnalyticsSearchManager interface enables interaction with Relativity analytics search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.AnalyticsSearch)">
            <summary>
            Asynchronously creates an instance of analytics saved search in a workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns an instance of an analytics saved search as an AnalyticsSearch object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.AnalyticsSearch)">
            <summary>
            Asynchronously updates an instance of a analytics saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing analytics saved search. Specify the workspace, search, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing analytics saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing analytics saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing analytics saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress and enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asyncronously deletes an instance of analytics saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.CopySingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously copies an instance of analytics saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="searchArtifactID">The Artifact ID of saved search to be copied.</param>
            <returns>SavedSearchRef object containing reference data of the copied saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Returns a result set of analytics saved search objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Returns a result set of analytics saved search objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a subset of a result set of analytics objects matching the specified query token.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetSearchOwnersAsync(System.Int32)">
            <summary>
            Asychronously returns all users in the workspace with permissions to view saved searches. Use to populate the AnalyticsSearch.Owners property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetSearchIncludesAsync(System.Int32)">
            <summary>
            Asychronously returns all relational fields available to the user in the workspace. Use to populate the AnalyticsSearch.Includes property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetSearchIndexesAsync(System.Int32)">
            <summary>
            Asychronously returns all analytics indexes available to the user in the workspace. Use to populate the AnalyticsSearch.SearchIndexID property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user as the SearchResultViewFields.FieldsNotIncluded property. Use to populate the AnalyticsSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Asychronously returns all fields included in the search as SearchResultViewFields.FieldsIncluded property. Use to populate the AnalyticsSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetFieldsForObjectCriteriaCollectionAsync(System.Int32,Relativity.Services.Field.FieldRef,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be specified as a subcondition for a given field in a saved search condition. Use to populate field values for batch and multi-object conditions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetFieldsForCriteriaConditionAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be included in a saved search condition.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetEmailToLinkUrlAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns the email link to a specified analytics saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetReferencedSavedSearchesAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all referenced saved search artifact id's for a given saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetAccessStatusAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets information about user's ability to access the saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <param name="ancestorArtifactIDs">The list of Artifact ID of the ancestors of the saved search. This argument is used to verify that the position of the saved search in the tree has not been changed.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="T:Relativity.Services.Search.IDataGridSearchManager">
            <summary>
            IDataGridSearchManager interface enables interaction with Relativity DataGrid search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.DataGridSearch)">
            <summary>
            Asynchronously creates an instance of DataGrid saved search in a workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns an instance of DataGrid saved search as a DataGridSearch object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.DataGridSearch)">
            <summary>
            Asynchronously updates an instance of a DataGrid saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing DataGrid saved search. Specify the workspace, search, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing DataGrid saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing DataGrid saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing DataGrid saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress and enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asyncronously deletes an instance of DataGrid saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.CopySingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously copies an instance of DataGrid saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="searchArtifactID">The Artifact ID of saved search to be copied.</param>
            <returns>SavedSearchRef object containing reference data of the copied saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Returns a result set of DataGridSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Returns a result set of DataGridSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a subset of a result set of DataGridSearch objects matching the specified query token.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetSearchOwnersAsync(System.Int32)">
            <summary>
            Asychronously returns all users in the workspace with permissions to view saved searches. Use to populate the DataGridSearch.Owners property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetSearchIncludesAsync(System.Int32)">
            <summary>
            Asychronously returns all relational fields available to the user in the workspace. Use to populate the DataGridSearch.Includes property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user as the SearchResultViewFields.FieldsNotIncluded property. Use to populate the DataGridSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Asychronously returns all fields included in the search as SearchResultViewFields.FieldsIncluded property. Use to populate the DataGridSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetFieldsForObjectCriteriaCollectionAsync(System.Int32,Relativity.Services.Field.FieldRef,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be specified as a subcondition for a given field in a saved search condition. Use to populate field values for batch and multi-object conditions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetFieldsForCriteriaConditionAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be included in a saved search condition.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetEmailToLinkUrlAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns the email link to a specified DataGrid saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetReferencedSavedSearchesAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all referenced saved search artifact id's for a given saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetAccessStatusAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets information about user's ability to access the saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <param name="ancestorArtifactIDs">The list of Artifact ID of the ancestors of the saved search. This argument is used to verify that the position of the saved search in the tree has not been changed.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="T:Relativity.Services.Search.IdtSearchManager">
            <summary>
            IdtSearchManager interface enables interaction with Relativity dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.dtSearch)">
            <summary>
            Asynchronously creates an instance of saved dtSearch in a workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns an instance of a saved dtSearch as a dtSearch object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.dtSearch)">
            <summary>
            Asynchronously updates an instance of a saved dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing dtSearch. Specify the workspace, search, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing dtSearch. Specify the workspace, search, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing dtSearch. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing dtSearch. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asyncronously deletes an instance of saved dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.CopySingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously copies an instance of dtSearch saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="searchArtifactID">The Artifact ID of saved search to be copied.</param>
            <returns>SavedSearchRef object containing reference data of the copied saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Returns a result set of saved dtSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Returns a result set of saved dtSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a subset of a result set of analytics objects matching the specified query token.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetSearchOwnersAsync(System.Int32)">
            <summary>
            Asychronously returns all users in the workspace with permissions to view saved searches. Use to populate the dtSearch.Owners property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetSearchIncludesAsync(System.Int32)">
            <summary>
            Asychronously returns all relational fields available to the user in the workspace. Use to populate the dtSearch.Includes property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetSearchIndexesAsync(System.Int32)">
            <summary>
            Asychronously returns all dtSearch indexes available to the user in the workspace. Use to populate the dtSearch.SearchIndexID property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user as the SearchResultViewFields.FieldsNotIncluded property. Use to populate the dtSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Asychronously returns all fields included in the search as SearchResultViewFields.FieldsIncluded property. Use to populate the dtSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetFieldsForObjectCriteriaCollectionAsync(System.Int32,Relativity.Services.Field.FieldRef,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be specified as a subcondition for a given field in a saved search condition. Use to populate field values for batch and multi-object conditions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetFieldsForCriteriaConditionAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be included in a saved search condition.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetEmailToLinkUrlAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns the email link to a specified saved dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetReferencedSavedSearchesAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all referenced saved search artifact id's for a given saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetAccessStatusAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets information about user's ability to access the saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <param name="ancestorArtifactIDs">The list of Artifact ID of the ancestors of the saved search. This argument is used to verify that the position of the saved search in the tree has not been changed.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="T:Relativity.Services.Search.IKeywordSearchManager">
            <summary>
            IdtSearchManager interface enables interaction with Relativity dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.KeywordSearch)">
            <summary>
            Asynchronously creates an instance of keyword saved search in a workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns an instance of keyword saved search as a KeywordSearch object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.KeywordSearch)">
            <summary>
            Asynchronously updates an instance of a keyword saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing keyword saved search. Specify the workspace, search, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing keyword saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing keyword saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing keyword saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress and enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asyncronously deletes an instance of keyword saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.CopySingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously copies an instance of keyword saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="searchArtifactID">The Artifact ID of saved search to be copied.</param>
            <returns>SavedSearchRef object containing reference data of the copied saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Returns a result set of KeywordSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Returns a result set of KeywordSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a subset of a result set of KeywordSearch objects matching the specified query token.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetSearchOwnersAsync(System.Int32)">
            <summary>
            Asychronously returns all users in the workspace with permissions to view saved searches. Use to populate the KeywordSearch.Owners property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetSearchIncludesAsync(System.Int32)">
            <summary>
            Asychronously returns all relational fields available to the user in the workspace. Use to populate the KeywordSearch.Includes property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user as the SearchResultViewFields.FieldsNotIncluded property. Use to populate the KeywordSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Asychronously returns all fields included in the search as SearchResultViewFields.FieldsIncluded property. Use to populate the KeywordSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetFieldsForObjectCriteriaCollectionAsync(System.Int32,Relativity.Services.Field.FieldRef,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be specified as a subcondition for a given field in a saved search condition. Use to populate field values for batch and multi-object conditions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetFieldsForCriteriaConditionAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be included in a saved search condition.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetEmailToLinkUrlAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns the email link to a specified keyword saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetReferencedSavedSearchesAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all referenced saved search artifact id's for a given saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetAccessStatusAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets information about user's ability to access the saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <param name="ancestorArtifactIDs">The list of Artifact ID of the ancestors of the saved search. This argument is used to verify that the position of the saved search in the tree has not been changed.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetAccessStatusAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously gets information about user's ability to access the saved search without checking for saved search position change in the tree.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="T:Relativity.Services.Search.ISearchContainerManager">
            <summary>
            Search Container Manager.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.SearchContainer)">
            <summary>
            Asynchronously creates an instance of Search Container.
            </summary>
            <param name="workspaceArtifactID">Workspace the new Search Container belongs to.</param>
            <param name="searchContainer">The Search Container DTO to create.</param>
            <returns>Artifact ID of the new Search Container.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.SearchContainer)">
            <summary>
            Asynchronously updates a Search Container.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="searchContainer">The Search Container DTO to update.</param>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously delets a Search Container and its children.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="searchContainerArtifactID">ID of the Search Container to delete.</param>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously queries for Search Containers.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="query">Query</param>
            <param name="length">Number of results to return.</param>
            <returns>A SearchContainerResultSet containing query results.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Asynchronously queries for Search Containers.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="query">Query</param>
            <returns>A SearchContainerResultSet containing query results.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously queries for a subset of a collection of Search Container instances.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="queryToken">Search Query Token.</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns>A SearchContainerResultSet containing query results.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously read a single Search Container instance.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under</param>
            <param name="searchContainerArtifactID">ID of the Search Container to Read</param>
            <returns>A Search Container DTO.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetSearchContainerItemsAsync(System.Int32,Relativity.Services.Search.SearchContainerRef)">
            <summary>
            Asynchronously get items stored within a Search Container.
            </summary>
            <param name="workspaceArtifactID">Workspace the Search Container is under.</param>
            <param name="searchContainer">Search Container</param>
            <returns>A collection of Search Container and Saved Search nodes within the provided Search Container.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetChildSearchContainersAsync(System.Int32,Relativity.Services.Search.SearchContainerRef)">
            <summary>
            Asynchronously gets child Search Containers without search items.
            </summary>
            <param name="workspaceArtifactID">Workspace the Search Container is under.</param>
            <param name="searchContainer">Search Container</param>
            <returns>A collection of Search Container nodes within the provided Search Container.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetSearchContainerTreeAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets tree of Search Containers and Saved Searches with specified nodes expanded.
            </summary>
            <param name="workspaceArtifactID">Workspace the tree of Search Containers is under</param>
            <param name="expandedNodes">List of node IDs to be expanded in returned tree</param>
            <returns>A collection of Search Container nodes matching expanded nodes list with contained Saved Search nodes.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetSearchContainerTreeAsync(System.Int32,System.Collections.Generic.List{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Asynchronously gets tree of Search Containers and Saved Searches with specified nodes expanded, auto-expanding full path to the selected node.
            </summary>
            <param name="workspaceArtifactID">Workspace the tree of Search Containers is under.</param>
            <param name="expandedNodes">List of node IDs to be expanded in returned tree.</param>
            <param name="selectedNode">ID of the node to be included in the expand chain.</param>
            <returns>A collection of Search Container nodes matching expanded nodes list with contained Saved Search nodes.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetFilteredSearchContainerTreeAsync(System.Int32,System.String)">
            <summary>
            Asynchronously gets the tree of search containers and saved searches matching the search condition specified as a query string.
            </summary>
            <param name="workspaceArtifactId">Workspace the tree of Search Containers is under.</param>
            <param name="searchCondition">Search keyword for tree nodes to be matched against.</param>
            <returns>A collection of Search Container and Saved Search nodes matching provided search conditions.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetFilteredWithAdvancedOptionsSearchContainerTreeAsync(System.Int32,Relativity.Services.DataContracts.DTOs.Search.SearchContainerTreeFilter)">
            <summary>
            Asynchronously gets the tree of search containers and saved searches matching the search condition specified as a SearchContainerTreeFilter object.
            </summary>
            <param name="workspaceArtifactID">Workspace the tree of Search Containers is under.</param>
            <param name="filter">Search fields(CreatedBy, LastModifiedBy, Owner and etc.) for tree nodes to be matched against.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing saved search folder (search container) and its children, including subfolders and saved searches. Specify the workspace, source folder, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace containing the Search Container.</param>
            <param name="artifactID">The Artifact ID of Search Container to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination Search Container.</param>
            <returns>A SearchContainerMoveResultSet object containing status information about the Search Container being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing saved search folder (search container) and its children, including subfolders and saved searches. Specify the workspace, source folder, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace containing the Search Container.</param>
            <param name="artifactID">The Artifact ID of Search Container to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination Search Container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SearchContainerMoveResultSet object containing status information about the Search Container being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing saved search folder (search container) and its children, including subfolders and saved searches. Specify the workspace, source folder, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace containing the Search Container.</param>
            <param name="artifactID">The Artifact ID of Search Container to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination Search Container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the Search Container is moving.</param>
            <returns>A SearchContainerMoveResultSet object containing status information about the Search Container being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing saved search folder (search container) and its children, including subfolders and saved searches. Specify the workspace, source folder, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress and enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace containing the Search Container.</param>
            <param name="artifactID">The Artifact ID of Search Container to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination Search Container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the Search Container is moving.</param>
            <returns>A SearchContainerMoveResultSet object containing status information about the Search Container being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetAdvancedSearchViewInfoAsync(System.Int32)">
            <summary>
            Asynchronously gets the fields of Advanced Search browser View, if user has read permissions for view. 
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace.</param>
            <returns>A AdvancedSearchViewInfo object containing information for advanced search filtering</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetAdvancedSearchViewUniqueOwnersAsync(System.Int32)">
            <summary>
            Asynchronously gets the users that are owners of at least one of saved searches in workspace.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace.</param>
            <returns>A collection of users that are owners of at least one saved search in the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetAdvancedSearchViewUniqueCreatedByAsync(System.Int32)">
            <summary>
            Asynchronously gets the users that have created at least one of saved searches in workspace.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace.</param>
            <returns>A collection of users that have created at least one saved search in the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetAdvancedSearchViewUniqueModifiedByAsync(System.Int32)">
            <summary>
            Asynchronously gets the users that have modified at least one of saved searches in workspace.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace.</param>
            <returns>A collection of users that have modified at least one saved search in the workspace.</returns>
        </member>
        <member name="T:Relativity.Services.Search.ISearchModule">
            <summary>
            Search Manager Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer">
            <summary>
            Class that contains methods to serialize Saved Search Criteria
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.TransformForSerialize(Relativity.Services.Search.CriteriaCollection)">
            <summary>
            Transforms model for Serialization
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Transforms data for DeSerialzation
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetCriteriaDateConditionDateTimeRangeEnum(System.Object)">
            <summary>
            Get a DateTimeRange Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A DateTimeRange value.</returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetMonthEnum(System.Object)">
            <summary>
            Get a DateTimeRange Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A DateTimeRange value.</returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetOperatorEnum(System.Object)">
            <summary>
            Get a CriteriaConditionEnum Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A CriteriaConditionEnum value.</returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetOperatorDateEnum(System.Object)">
            <summary>
            Get a CriteriaDateConditionEnum Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A CriteriaConditionEnum value.</returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetCriteriaBooleanOperatorEnum(System.Object)">
            <summary>
            Get a CriteriaDateConditionEnum Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A CriteriaConditionEnum value.</returns>
        </member>
        <member name="T:Relativity.Services.Search.ISearchProviderManager">
            <summary>
            ISearchProviderManager interface enables querying for search providers and their markup within a Relativity workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.ISearchProviderManager.GetActiveHtmlSearchProvidersAsync(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Retrieve all the active search providers that support a fully HTML UI.
            </summary>
            <param name="workspaceId">WorkspaceID of the workspace which contains the search providers.</param>
            <param name="artifactTypeId">ArtifactTypeId of the object that the search providers will search against.</param>
            <param name="useAdvancedSearch">If true, the markup returned will be the search provider's advanced markup. Otherwise, it will be the basic markup.</param>
            <returns>Returns the search providers that are active and supported through a fully HTML UI, along with a collection of the markup used by the search providers.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchProviderManager.GetActiveHtmlSearchProvidersAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the active search providers that support a fully HTML UI.
            </summary>
            <param name="workspaceId">WorkspaceID of the workspace which contains the search providers.</param>
            <param name="artifactTypeId">ArtifactTypeId of the object that the search providers will search against.</param>
            <param name="useAdvancedSearch">If true, the markup returned will be the search provider's advanced markup. Otherwise, it will be the basic markup.</param>
            <param name="cancellationToken">Used to request cancel of the search provider service execution.</param>
            <returns>Returns the search providers that are active and supported through a fully HTML UI, along with a collection of the markup used by the search providers.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchProviderManager.GetActiveHtmlSearchProvidersAsync(System.Int32,System.Int32,System.Boolean,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Retrieve all the active search providers that support a fully HTML UI.
            </summary>
            <param name="workspaceId">WorkspaceID of the workspace which contains the search providers.</param>
            <param name="artifactTypeId">ArtifactTypeId of the object that the search providers will search against.</param>
            <param name="useAdvancedSearch">If true, the markup returned will be the search provider's advanced markup. Otherwise, it will be the basic markup.</param>
            <param name="progress">Contains a callback that will report service execution progress.</param>
            <returns>Returns the search providers that are active and supported through a fully HTML UI, along with a collection of the markup used by the search providers.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchProviderManager.GetActiveHtmlSearchProvidersAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Retrieve all the active search providers that support a fully HTML UI.
            </summary>
            <param name="workspaceId">WorkspaceID of the workspace which contains the search providers.</param>
            <param name="artifactTypeId">ArtifactTypeId of the object that the search providers will search against.</param>
            <param name="useAdvancedSearch">If true, the markup returned will be the search provider's advanced markup. Otherwise, it will be the basic markup.</param>
            <param name="cancellationToken">Used to request cancel of the search provider service execution.</param>
            <param name="progress">Contains a callback that will report service execution progress.</param>
            <returns>Returns the search providers that are active and supported through a fully HTML UI, along with a collection of the markup used by the search providers.</returns>
        </member>
        <member name="T:Relativity.Services.Search.SearchProvider">
            <summary>
            Represents an instance of a search provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.ArtifactId">
            <summary>
            The unique identifier for the search provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.Name">
            <summary>
            The display name for the search provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.MarkupId">
            <summary>
            The id that corresponds to the markup used by this search provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.BasicSearchMarkupId">
            <summary>
            The id that corresponds to the markup used by this search provider in basic search panel
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.Type">
            <summary>
            The type of the search provider
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchProviderMarkup">
            <summary>
            Represents an instance of search provider markup 
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderMarkup.Id">
            <summary>
            A unique string that will be replace SEARCHPROVIDERIDSUFFIX within the markup. This should be used as a suffix to all HTML ids declared within the markup to ensure uniqueness of ids.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderMarkup.Markup">
            <summary>
            The HTML string that will be used for the markup
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchProviderResultSet">
            <summary>
            Object that is returned when making calls to the Search Provider Manager service
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderResultSet.Success">
            <summary>
            Boolean value indicating whether the service call was a success or not.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderResultSet.Message">
            <summary>
            String that will contain error messages, if any.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderResultSet.SearchProviders">
            <summary>
            Collection of the available search providers
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderResultSet.MarkupCollection">
            <summary>
            Collection of the distinct markup used by the search providers
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.EventHandlerFailedException">
            <summary>
            The exception thrown when an event handler fails during an update operation performed through the Object Manager service.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EventHandlerFailedException class with a string. 
            </summary>
            <param name="message">The message captured in the exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the EventHandlerFailedException class with a string and inner exception.
            </summary>
            <param name="message">The message captured in the exception.</param>
            <param name="innerException">The inner exception captured.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException">
            <summary>
            Represents exceptions that occur when Object Manager can't find an artifact required for an operation.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the ArtifactNotFoundException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ArtifactNotFoundException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ArtifactNotFoundException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ArtifactNotFoundException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.DuplicateArtifactException">
            <summary>
            Represents exceptions that occur when specifying a field or object more than once in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.DuplicateArtifactException.#ctor">
            <summary>
            Initializes a new instance of the DuplicateArtifactException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.DuplicateArtifactException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DuplicateArtifactException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.DuplicateArtifactException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DuplicateArtifactException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.DuplicateArtifactException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the DuplicateArtifactException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.InsufficientArgumentException">
            <summary>
            Represents exceptions that occur when a parameter does not have enough fields or values in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InsufficientArgumentException.#ctor">
            <summary>
            Initializes a new instance of the InsufficientArgumentException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InsufficientArgumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InsufficientArgumentException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InsufficientArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InsufficientArgumentException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InsufficientArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InsufficientArgumentException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException">
            <summary>
            Represents exceptions that occur when specifying an object of a different object type than Object Manager expects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException.#ctor">
            <summary>
            Initializes a new instance of the InvalidObjectTypeException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidObjectTypeException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidObjectTypeException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidObjectTypeException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.InvalidValueTypeException">
            <summary>
            Represents exceptions that occur when specifying the wrong type of value in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidValueTypeException.#ctor">
            <summary>
            Initializes a new instance of the InvalidValueTypeException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidValueTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidValueTypeException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidValueTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidValueTypeException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidValueTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidValueTypeException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.MissingArgumentException">
            <summary>
            Represents exceptions that occur when missing required parameters in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.MissingArgumentException.#ctor">
            <summary>
            Initializes a new instance of the MissingArgumentException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.MissingArgumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MissingArgumentException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.MissingArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MissingArgumentException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.MissingArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MissingArgumentException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.PermissionDeniedException">
            <summary>
            Represents exceptions that occur when trying to modify an object the user does not have permission to in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.PermissionDeniedException.#ctor">
            <summary>
            Initializes a new instance of the PermissionDeniedException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.PermissionDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PermissionDeniedException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.PermissionDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PermissionDeniedException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.PermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the PermissionDeniedException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException">
            <summary>
            Represents exceptions that occur when specifying a field type that Object Manager does not support.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException.#ctor">
            <summary>
            Initializes a new instance of the UnsupportedFieldTypeException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UnsupportedFieldTypeException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UnsupportedFieldTypeException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the UnsupportedFieldTypeException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException">
            <summary>
            Represents exceptions that occur when specifying an object type that Object Manager does not support.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException.#ctor">
            <summary>
            Initializes a new instance of the UnsupportedObjectTypeException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UnsupportedObjectTypeException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UnsupportedObjectTypeException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the UnsupportedObjectTypeException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.CallingContext">
            <summary>
            Represents information about the web context from which the event handler is being called, such as the layout or page mode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CallingContext.Layout">
            <summary>
            Gets or set a LayoutMetadata instance containing the name and artifact ID of the layout associated with a call to an event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CallingContext.Referrer">
            <summary>
            Gets or sets a string indicating where the call to the event handler originates. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CallingContext.PageMode">
            <summary>
            Gets or sets the information needed by the event handler about the step in the page workflow associated with a call, such as a layout, list, edit, or other.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Choice">
            <summary>
            Represents a choice used as a value for single or multiple choice fields in Relativity. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Choice.Name">
            <summary>
            Gets or sets the user-friendly name of a Choice object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Choice.Guids">
            <summary>
            Gets or sets a list of GUIDs used to identify a Choice object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Choice.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Choice object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ChoiceRef">
            <summary>
            Represents a key or reference to a Choice object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ChoiceRef.Guid">
            <summary>
            Gets or sets a GUID used to identify a Choice object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ChoiceRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Choice object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress">
            <summary>
            Represents the progress object for mass delete processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress.OperationsCompleted">
            <summary>
            Gets or sets the operations completed count.
            </summary>
            <value>
            The operations completed.
            </value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress.TotalOperations">
            <summary>
            Gets or sets the total operations count.
            </summary>
            <value>
            The total operations.
            </value>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress"/> class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress"/> class with the total operations and operations completed counts.
            </summary>
            <param name="totalOperations">The total operations count.</param>
            <param name="operationsCompleted">The operations completed count.</param>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.EventHandlerStatus">
            <summary>
            Contains a message and operation status returned by an event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.EventHandlerStatus.Success">
            <summary>
            Gets or sets a Boolean value indicating whether the event handler execution was successful.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.EventHandlerStatus.Message">
            <summary>
            Gets or sets a string returned by an event handler.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasArtifactTypeID">
            <summary>
            Enables a class to return the Artifact Type ID of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasArtifactTypeID.ArtifactTypeID">
            <summary>
            Gets or sets the Artifact Type ID of an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasIdentifyingInformation">
            <summary>
            Implemented by a class to indicate that it contains identifiers used for specifying a group of objects.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasViewFieldID">
            <summary>
            Enables a class to return the identifier of the view field associated with an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasViewFieldID.ViewFieldID">
            <summary>
            Gets or sets the identifier for a view field associated with an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IRelativityObject">
            <summary>
            Enables a RelativityObject class to return a field-value pair.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IRelativityObject.Item(System.Int32)">
            <summary>
            Gets a field-value pair by using the Artifact ID of the field to retrieve it.
            </summary>
            <param name="artifactId">The Artifact ID of a Field object.</param>
            <returns>A corresponding field-value pair.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.IRelativityObject.FieldValuePairExists(System.Int32)">
            <summary>
            Indicates whether the current RelativityObject contains a FieldValuePair object with the specified Artifact ID.
            </summary>
            <param name="artifactId">The Artifact ID of a FieldValuePair object.</param>
            <returns>Returns true if the FieldValuePair object has the specified Artifact ID.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasGuid">
            <summary>
            Enables a class to return a GUID for an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasGuid.Guid">
            <summary>
            Gets or sets a GUID for an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasGuids">
            <summary>
            Enables a class to return a list of GUIDs for an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasGuids.Guids">
            <summary>
            Gets or sets a list of GUIDs for an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasName">
            <summary>
            Enables a class to return the name of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasName.Name">
            <summary>
            Gets or sets the name of an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasArtifactID">
            <summary>
            Enables a class to return the Artifact ID of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasArtifactID.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.LongTextBehavior">
            <summary>
            Controls the behavior that is used when a Long Text field exceeds the configured character limit.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.LongTextBehavior.Default">
            <summary>
            Long Text field values will be truncated and followed by an ellipsis when the value exceeds the configured limit.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.LongTextBehavior.Tokenized">
            <summary>
            Long Text field values will return a default token when the value exceeds the configured limit.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Field">
            <summary>
            Represents a field used to store document metadata, choices, and other information in Relativity. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.FieldCategory">
            <summary>
            Gets or sets the FieldCategory enum used to indicate the specific functionality assigned to a field, such as stores descriptive text or acts as a relational field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.FieldType">
            <summary>
            Gets or sets the type of a Relativity field, such as fixed-length text, date, single object, or others. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.ViewFieldID">
            <summary>
            Gets or sets a unique identifier used to reference a view field. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.Guids">
            <summary>
            Gets or sets the GUIDs used to identify a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.Name">
            <summary>
            Gets or sets the user-friendly name of a Field object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldCategory">
            <summary>
            Specifies the category of a field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Generic">
            <summary>
            The field doesn't fit in a more specific category.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.FullText">
            <summary>
            The field holds descriptive text.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Identifier">
            <summary>
            The field identifies an item, such as a page.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Reflected">
            <summary>
            The field is reflected.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Comments">
            <summary>
            The field is used for a reviewer's comments.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Relational">
            <summary>
            The field is relational, enabling the identification of duplicates and document families.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.ProductionMarker">
            <summary>
            The field describes an aspect of a production.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.AutoCreate">
            <summary>
            The field is automatically generated.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.FileSize">
            <summary>
            The field holds the size of a file in KB.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.FolderName">
            <summary>
            The field contains the name of a folder.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.FileInfo">
            <summary>
            The field contains metadata or information about a file.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.ParentArtifact">
            <summary>
            The field represents the Artifact ID of the parent object.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.MarkupSetMarker">
            <summary>
            The field contains the markup set for use in a production.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.GenericSystem">
            <summary>
            This field is the same as the Generic enum, except that it can't be deleted.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.MultiReflected">
            <summary>
            The field is multireflected.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Batch">
            <summary>
            The field represents the grouping mechanism for a batch.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldRef">
            <summary>
            Represents a key or reference to a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRef.ViewFieldID">
            <summary>
            Gets or sets a unique identifier used to reference a view field. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRef.Guid">
            <summary>
            Gets or sets a GUID used to identify a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRef.Name">
            <summary>
            Gets or sets the user-friendly name of a Field object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldRefValuePair">
             <summary>
             Represents a key or reference to a FieldValuePair object.
             </summary>
             <remarks>
             <list type="table">
             <listheader>
             <term>FieldType</term>
             <term>Expected value type</term>
             </listheader>
            <item>
            <term >Fixed-Length Text</term>
            <term>string</term> 
            </item> 
            <item> 
            <term>Long Text</term> 
            <term>string</term> 
            </item>
            <item>
            <term >Date</term>
            <term >DateTime</term>
            </item>
            <item>
            <term>Whole Number</term> 
            <term >int?</term>
            </item>
            <item>
            <term >Decimal</term>
            <term >decimal?</term>
            </item> 
            <item> 
            <term>Currency</term>
            <term >decimal?</term> 
            </item> 
            <item> 
            <term >Yes/No</term>
            <term >bool?</term> 
            </item> 
            <item> 
            <term>Single Choice</term> 
            <term >ChoiceRef</term>
            </item> 
            <item> 
            <term >Multiple Choice</term> 
            <term >IEnumerable&lt; ChoiceRef&gt;</term> 
            </item> 
            <item> 
            <term>User</term> 
            <term >User(The ArtifactID must be set on this object.)</term> 
            </item> 
            <item> 
            <term >File</term> 
            <term >FileRef</term> 
            </item> 
            <item> 
            <term    >Single Object</term>
            <term >RelativityObjectRef</term>
            </item> 
            <item> 
            <term >Multiple Object</term> 
            <term >IEnumerable&lt; RelativityObjectRef&gt;</term> 
            </item> 
             </list>
             </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRefValuePair.Value">
            <summary>
            Gets or sets a generic object type that the contains the value assigned to a field.  
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRefValuePair.Field">
            <summary>
            Gets or sets a FieldRef object.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldType">
            <summary>
            Specifies the type of a Relativity field, such as fixed-length text, date, single object etc. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.Empty">
            <summary>
            Empty Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.FixedLengthText">
            <summary>
            Fixed-Length Text Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.WholeNumber">
            <summary>
            Whole Number Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.Date">
            <summary>
            Date Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.YesNo">
            <summary>
            Yes/No Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.LongText">
            <summary>
            Long-Text Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.SingleChoice">
            <summary>
            Single Choice Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.Decimal">
            <summary>
            Decimal Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.Currency">
            <summary>
            Currency Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.MultipleChoice">
            <summary>
            Multiple Choice Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.File">
            <summary>
            File Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.SingleObject">
            <summary>
            Single Object Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.User">
            <summary>
            User Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.MultipleObject">
            <summary>
            Multiple Object Field
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldUpdateBehavior">
            <summary>
            Specifies how to update multiple choice and multiple object fields. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldUpdateBehavior.Replace">
            <summary>
            Overwrites the current values for the choice or object field with those passed into the service. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldUpdateBehavior.Merge">
            <summary>
            Merges the values passed into the service with the current values for the choice or object field. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldValuePair">
             <summary>
             Represents a field and the value currently assigned to it.
             </summary>
             <remarks>
             <list type="table">
             <listheader>
             <term>FieldType</term>
             <term>Expected value type</term>
             </listheader>
            <item>
            <term >Fixed-Length Text</term>
            <term>string</term> 
            </item> 
            <item> 
            <term>Long Text</term> 
            <term>string</term> 
            </item>
            <item>
            <term >Date</term>
            <term >DateTime</term>
            </item>
            <item>
            <term>Whole Number</term> 
            <term >int?</term>
            </item>
            <item>
            <term >Decimal</term>
            <term >decimal?</term>
            </item> 
            <item> 
            <term>Currency</term>
            <term >decimal?</term> 
            </item> 
            <item> 
            <term >Yes/No</term>
            <term >bool?</term> 
            </item> 
            <item> 
            <term>Single Choice</term> 
            <term >ChoiceRef</term>
            </item> 
            <item> 
            <term >Multiple Choice</term> 
            <term >IEnumerable&lt; ChoiceRef&gt;</term> 
            </item> 
            <item> 
            <term>User</term> 
            <term >User(The ArtifactID must be set on this object.)</term> 
            </item> 
            <item> 
            <term >File</term> 
            <term >FileRef</term> 
            </item> 
            <item> 
            <term    >Single Object</term>
            <term >RelativityObjectRef</term>
            </item> 
            <item> 
            <term >Multiple Object</term> 
            <term >IEnumerable&lt; RelativityObjectRef&gt;</term> 
            </item> 
             </list>
             </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldValuePair.Value">
            <summary>
            Gets or sets a generic object type that contains the value assigned to a field. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldValuePair.Field">
            <summary>
            Gets or sets a Field object.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Layout">
            <summary>
            Represents a Layout that contains fields used for coding and other purposes in the Relativity UI. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Layout.Name">
            <summary>
            Gets or sets the user-friendly name of a Layout object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Layout.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Layout object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Layout.Guids">
            <summary>
            Gets or sets the GUIDs used to identify a Layout object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.LayoutRef">
            <summary>
            Represents a key or reference to a Layout object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.LayoutRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Layout object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.LayoutRef.Guid">
            <summary>
            Gets or sets a GUID used to identify a Layout object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassCreateRequest">
            <summary>
            Represents a request to create a multiple Relativity Dynamic Objects (RDOs).
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.ParentObject">
            <summary>
            Gets or sets the Artifact ID of the parent of the current RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.ObjectType">
            <summary>
            Gets or sets the Object Type of the current RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.Fields">
            <summary>
            Gets or sets the Field objects to update when the new RelativityObject instances are create
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.ValueLists">
            <summary>
            Gets or sets a list of values used to update the RelativityObject instances. The order of the values corresponds to the order of the Field objects.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassCreateResult">
            <summary>
            Represents the results of a mass create operation performed through the Object Manager service.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateResult.Objects">
            <summary>
            Gets or sets the RelativityObject instances containing the fields and their values 
            constructed by a mass create operation. The order of the objects corresponds to the 
            order of the values passed into the request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateResult.Success">
            <summary>
            Sets a Boolean value to true when no errors occurred while processing the request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateResult.Message">
            <summary>
            Sets explanatory information for an error when one occurs.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest">
            <summary>
            Represents a request to perform a mass delete operation on all objects that meet a specified set of conditions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest.ObjectIdentificationCriteria">
            <summary>
            Gets or sets the conditions used to determine which objects should be deleted.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest">
            <summary>
            Represents a request to delete multiple objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest.Objects">
            <summary>
            Gets or sets a list of objects to be deleted.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassDeleteResult">
            <summary>
            Represents the results of a mass delete operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteResult.Report">
            <summary>
            Gets or sets a DeleteReport instance containing information about the deleted items.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteResult.Success">
            <summary>
            True if no errors occurred while processing the request
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteResult.Message">
            <summary>
            Set if an error occurs, providing more insight with what went wrong
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassOperationsStateProgress">
            <summary>
            Represents the progress object for mass operations processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassOperationsStateProgress.PercentageComplete">
            <summary>
            Gets or sets the percentage of operations complete.
            </summary>
            <value>
            The operations completed.
            </value>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest">
            <summary>
            Represents a request to perform a mass update operation on all objects that meet a specified set of conditions.
            </summary>
            <remarks>
            The MassUpdateByCriteriaRequest class specifies the view or search conditions used to select a list of objects 
            with the same type for updating. It also specifies same value for a specific field that is to be updated on the 
            objects. In the Relativity UI, this update operation is equivalent to the user selecting the All option in the 
            mass operations bar on a list page.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest.FieldValues">
            <summary>
            Gets or sets the fields and values used for updating each object. The same value is used for updating a specific field on each object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest.ObjectIdentificationCriteria">
            <summary>
            Gets or sets specific view or search conditions used to select the objects for updating.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest">
            <summary>
            Represents a request to perform a mass update operation on a list of objects by 
            modifying each of the specified object fields with a distinct value.
            </summary>
            <remarks>
            The MassUpdatePerObjectsRequest class specifies identifiers for a list of objects 
            of the same type for updating. It also specifies a distinct value for each object 
            field that is to be updated. This action is like overlay behavior available through 
            the Relativity Desktop Client (RDC).
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest.Fields">
            <summary>
            Gets or sets a list fields for updating on the specified objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest.ObjectValues">
            <summary>
            Gets or sets the objects and their values to be updated. The values must be specified in the same order as the fields.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdateOptions">
            <summary>
            Represents information about how a mass update request is performed by replacing or merging field values.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateOptions.UpdateBehavior">
            <summary>
            Gets or set the behavior used when mass updating multiple choice and multiple object fields by replacing or merging values. By default, values are replaced.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest">
            <summary>
            Represents a request to perform a mass update operation on a list of objects 
            by modifying each of the specified object fields with the same value.
            </summary>
            <remarks>
            The MassUpdateByObjectIdentifiersRequest class specifies the identifiers used 
            to select a list of objects with the same type for updating. It also includes 
            the same values for all object fields that are to be updated. In the Relativity UI, 
            this update operation is equivalent to the user selecting the Checked or 
            These option in the mass operations bar on a list page.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest.Objects">
            <summary>
            Gets or sets a list of objects to be updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest.FieldValues">
            <summary>
            Gets or sets the fields and values used for updating each object. The same value is used for updating all object fields that are to be updated.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdateResult">
            <summary>
            Represents the results of a mass update operation performed the Object Manager service.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateResult.TotalObjectsUpdated">
            <summary>
            Sets the total number of objects successfully updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateResult.Success">
            <summary>
            Sets a Boolean value to true when no errors occurred while processing the request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateResult.Message">
            <summary>
            Sets explanatory information for an error when one occurs.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ObjectRefValuesPair">
            <summary>
            Represents a key or reference to a pair of RelativityObjectRefs objects and their associated field values.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectRefValuesPair.Object">
            <summary>
            Gets or sets an identifier for a RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectRefValuesPair.Values">
            <summary>
            Gets or sets a new field values for the RelativityObject.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ObjectType">
            <summary>
            Represents a custom object type added to a workspace. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectType.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of an Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectType.Name">
            <summary>
            Gets or sets the user-friendly name of an Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectType.Guids">
            <summary>
            Gets or sets the GUIDs used to identify the Object Type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectType.ArtifactTypeID">
            <summary>
            Gets or sets the Descriptor Artifact Type ID of the Object Type object. This ID also identifies an Object Type artifact as an ArtifactType.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef">
            <summary>
            Represents a key or reference to an ObjectType object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectTypeRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of an Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectTypeRef.Name">
            <summary>
            Gets or sets the user-friendly name of an Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectTypeRef.Guid">
            <summary>
            Gets or sets a GUID used to identify the Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectTypeRef.ArtifactTypeID">
            <summary>
            Gets or sets the Descriptor Artifact Type ID of the Object Type object. This ID also identifies an Object Type artifact as an ArtifactType.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.PageMode">
            <summary>
            Indicates the step in the page workflow in which a call to the event handler originates.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.PageMode.Unknown">
            <summary>
            Indicates that the page mode is unknown. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.PageMode.View">
            <summary>
            Indicates the view page mode. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.PageMode.Edit">
            <summary>
            Indicates the edit page mode. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.PageMode.List">
            <summary>
            Indicates the list page mode. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.QueryResultSlim">
            <summary>
            Represents the results returned by the QuerySlimAsync() method. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.TotalCount">
            <summary>
            Gets the total number of artifacts returned by the query.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.Objects">
            <summary>
            Gets a list of objects in read results from the query. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.IDWindow">
            <summary>
            Gets the Window object containing the IDs of the objects included in the current results set. 
            This property is populated only when the IncludeIdWindow property is set to true on the inbound Query object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.CurrentStartIndex">
            <summary>
            Gets the starting index for a result item in a query result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.ResultCount">
            <summary>
            Gets the number of result items returned by the current query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.ObjectType">
            <summary>
            Gets the type of the objects returned from a query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.SampleDetails">
            <summary>
            Gets the token used to persist an existing sample from one call to the next. The sample includes the metadata from the sampling run. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.RankWindow">
            <summary>
            Gets the set of ranks used to prime the review tool's session.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.RelationalField">
            <summary>
            Gets the related items included in the result set based on this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.Fields">
            <summary>
            Gets a list of fields associated with the results.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ReadOptions">
            <summary>
            Represents information about how long text fields are handled during read operations. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadOptions.MaxCharactersForLongTextValues">
            <summary>
            Gets or sets the maximum number of characters returned in the query results for long text fields. 
            </summary>
            <remarks>
            The MaximumNumberOfCharactersSupportedByLongText instance setting determines this number. 
            If a number isn’t not specified, the default is 1,000 characters.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadOptions.LongTextBehavior">
            <summary>
            Gets or sets the behavior used when a long text field exceeds the configured character limit.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria">
            <summary>
            Represents a set of query conditions used to identify a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.ObjectType">
            <summary>
            Gets or sets the ObjectTypeRef for type of object referenced by the query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.Condition">
            <summary>
             Gets or sets the search criteria, which can be a simple, single-field condition or a complex expression made by combining conditions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.RelationalField">
            <summary>
            Gets or sets the field used to include related items in query result. See <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef">FieldRef</see>.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.RowCondition">
            <summary>
            Gets or sets the row condition criteria.
            </summary>
            <remarks>
            The row condition can be a simple, single-field condition or a complex expression made by combining conditions. 
            It limits the result set returned after applying all other conditions and including the relational field. 
            Currently, this property only functions for the Pivot API.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.SearchProviderCondition">
            <summary>
            Gets or sets the search provider search condition. See <see cref="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.SearchProviderCondition">SearchProviderCondition</see>
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.QueryHint">
            <summary>
            Gets or sets the QueryHint of the currently executing search. A QueryHint is used to optimize the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.IsAdhocQuery">
            <summary>
            Gets or sets a Boolean value indicating whether the query engine should handle the search or view condition as a query type or simple condition.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.ExecutingSavedSearchID">
            <summary>
            Gets or sets the ID of the currently executing saved search.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.ExecutingViewID">
            <summary>
            Gets or sets the ID of the currently executing view.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.RelativityObject">
            <summary>
            Represents an object in Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.ParentObject">
            <summary>
            Gets or sets the Artifact ID of the parent of the current RelativityObject object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Name">
            <summary>
            Gets or sets the user-friendly name of the RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.FieldValues">
            <summary>
            Gets or sets a list of fields and their values on the RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of the current RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Guids">
            <summary>
            Gets or sets the GUIDs for the current RelativityObject. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Item(System.Int32)">
            <summary>
            Gets the FieldValuePair on the RelativityObject with the specified Artifact ID.
            </summary>
            <param name="artifactId">The Artifact ID of the Field you are referencing.</param>
            <returns>The FieldValuePair with the given ArtifactID.</returns>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Item(System.String)">
            <summary>
            Gets the FieldValuePair on the RelativityObject with the specified field name.
            </summary>
            <param name="fieldName">The Name of the Field you are referencing.</param>
            <returns>The FieldValuePair with the given Field Name.</returns>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Item(System.Guid)">
            <summary>
            Gets the FieldValuePair on the RelativityObject with the specified GUID.
            </summary>
            <param name="guid">The Guid of the Field you are referencing.</param>
            <returns>The FieldValuePair with the given Guid.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.RelativityObject.FieldValuePairExists(System.Int32)">
            <summary>
            Checks if this RelativityObject contains a FieldValuePair with specified Artifact ID
            </summary>
            <param name="artifactId"></param>
            <returns>True if an FVP has the artifact id</returns>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.RelativityObject.FieldValuePairExists(System.String)">
            <summary>
            Checks if this RelativityObject contains a FieldValuePair with specified field name (case-insensitive)
            </summary>
            <param name="fieldName"></param>
            <returns>True if an FVP has the field name</returns>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.RelativityObject.FieldValuePairExists(System.Guid)">
            <summary>
            Checks if this RelativityObject contains a FieldValuePair with specified guid
            </summary>
            <param name="guid"></param>
            <returns>True if an FVP has the guid</returns>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef">
            <summary>
            Represents the minimal information needed to uniquely identify a RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of the RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectRef.Guid">
            <summary>
            Gets or sets a GUID used to identify the RelativityObject.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.RelativityObjectSlim">
            <summary>
            Represents a streamlined RelativityObject with values that map to fields on a QuerySlimResult object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectSlim.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of the object being returned.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectSlim.Values">
            <summary>
            Gets or sets a list of values for the object. The order of the values corresponds to the order of the fields in the result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.RelativityObjectValue">
            <summary>
            Represents the value for a field. 
            </summary>
            <remarks>
            A RelativityObjectValue object is returned for single object fields, while a List of these objects is returned for multiple object fields.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectValue.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of the RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectValue.Guids">
            <summary>
            Gets or sets a list of GUIDs used to identify the RelativityObject. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectValue.Name">
            <summary>
            Gets or sets the user-friendly name of the Relativity Object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SampleDetails">
            <summary>
            Contains information used to define a sample set. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleDetails.SampleSize">
            <summary>
            Gets or sets the number of documents in a sample. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleDetails.UniverseSize">
            <summary>
            Gets or sets the number of documents in the saved search selected for sampling. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleDetails.Token">
            <summary>
            Gets or sets the identifier for a sample set. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SampleParameters">
            <summary>
            Contains information about how the sampling is performed. 
            </summary>
            <remarks>MarginOfError and ConfidenceLevel must both be provided for a statistical sample.  If either is null, we will check FixedSampleSize. 
            If that is null, we will check SamplingPercentage.  If none of those conditions are met, an exeption will be thrown.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.ExistingToken">
            <summary>
            Gets or sets the identifier for a sample set. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.MarginOfError">
            <summary>
            Gets or sets a value for the margin of error allowable in sample results. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.ConfidenceLevel">
            <summary>
            Gets or sets a value for confidence level required for a sample set. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.FixedSampleSize">
            <summary>
            Gets or sets a value representing a specific number of items from a group used to create a randomized sample set. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.SamplingPercentage">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SearchIndexRef">
            <summary>
            Represents a key or reference to a search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SearchIndexRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SearchIndexRef.Name">
            <summary>
            Gets or sets the user-friendly name of a search provider. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SearchProviderCondition">
            <summary>
            Contains the parameters used to execute a query through a search provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SearchProviderCondition.SearchIndex">
            <summary>
            Gets or sets the Artifact ID of the search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SearchProviderCondition.Input">
            <summary>
            Gets or sets a string containing the parameters used for a search provider, which were entered by a user.
            </summary>
            <remarks>
            The Input property gets a string returned by a registered JavaScript function of a search provider in the Relativity UI. 
            This string contains the parameters, which the user entered in HTML form provided for the search provider. 
            The value must be valid in order for it to be passed to the ISearchProviderGateway.HydrateInputData() function on the search provider.
            </remarks>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Security">
            <summary>
            Represents information about inherited security settings and user permissions on a specific object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Security.OverwriteInheritedSecurity">
            <summary>
            Gets or sets a Boolean value indicating whether the current RelativityObject inherits item level security from another object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Security.UserCanEditSecurity">
            <summary>
            Gets or sets a Boolean value indicating whether the requesting user has permission to the current object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Sort">
            <summary>
            Represents sorting information for query results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Sort.FieldIdentifier">
            <summary>
            Gets or sets the identifier for the field used to sort the results.
            </summary>
            <value>The field identifier.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Sort.Order">
            <summary>
            Gets or sets an integer indicating precedence when more than one sort order is defined.
            </summary>
            <value>The order.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Sort.Direction">
            <summary>
            Gets or sets the sort order as either ascending or descending. 
            </summary>
            <value>The sorting direction.</value>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SortEnum">
            <summary>
            Specifies whether query results are sorted in ascending or descending order. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.SortEnum.Ascending">
            <summary>
            Sorts results in ascending order.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.SortEnum.Descending">
            <summary>
            Sorts results in descending order. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.User">
            <summary>
            Represents the value of a User field.  
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.User.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a User object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.User.EmailAddress">
            <summary>
            Gets or sets the email address of a user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.User.Name">
            <summary>
            Gets or sets the name of a user.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteItem">
            <summary>
            Provides information about each item that was deleted.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteItem.ObjectTypeName">
            <summary>
            Gets or sets a string indicating the type of the object the was deleted.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteItem.Action">
            <summary>
            Gets or sets a string indicating the action taken to remove an object, such as delete for child objects, and unlink for associative objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteItem.Count">
            <summary>
            Gets or sets the number of objects that were deleted.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteItem.Connection">
            <summary>
            Gets or sets a string indicating the relationship between the deleted dependent objects, such as parent, child, and associative object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteReport">
            <summary>
            Contains information about deleted objects as a list of one or more DeleteItems instances.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteReport.DeletedItems">
            <summary>
            Gets or set a list of DeletedItems instances containing the number, object type, and other information about the deleted items.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.CreateRequest">
            <summary>
            Represents a request to create a Relativity Dynamic Object (RDO). 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateRequest.ParentObject">
            <summary>
            Gets or sets the Artifact ID of the parent of the current RelativityObject object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateRequest.ObjectType">
            <summary>
            Gets or sets the Object Type of the current RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateRequest.FieldValues">
            <summary>
            Gets or sets the FieldRefValuePairs, which contain a FieldRef and Value to set on the current RelativityObject.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteRequest">
            <summary>
            Represents a request to delete a RelativityObject. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteRequest.Object">
            <summary>
            Gets or sets the RelativityObject to be deleted.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteResult">
            <summary>
            Represents the results of a delete operation on a Document object and its associated files, or on a Relativity Dynamic object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteResult.Report">
            <summary>
            Gets or sets a DeleteReport instance containing information about the deleted items.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.CreateResult">
            <summary>
            Represents the results of a create operation performed through the Object Manager service.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateResult.Object">
            <summary>
            Gets or sets the RelativityObject instance containing the fields and their values constructed by a create operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateResult.EventHandlerStatuses">
            <summary>
            Gets a collection of EventHandlerStatus objects containing information about event handler execution.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.QueryResult">
            <summary>
            Represents the results of a Query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.TotalCount">
            <summary>
            Gets the total number of artifacts returned by the query.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.Objects">
            <summary>
            Gets a list of objects in the read results from the query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.IDWindow">
            <summary>
            Gets the Window object containing the IDs of the objects included in the current results set. This property is populated only when the IncludeIdWindow property is set to true on the inbound Query object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.CurrentStartIndex">
            <summary>
            Gets the starting index for a result item in a query result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.ResultCount">
            <summary>
            Gets the number of result items returned by the current query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.ObjectType">
            <summary>
            Gets the type of the objects returned from a query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.SampleDetails">
            <summary>
            Gets the token used to persist an existing sample from one call to the next. The sample includes the metadata from the sampling run. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.RankWindow">
            <summary>
            Gets the set of ranks used to prime the review tool's session.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.RelationalField">
            <summary>
            Gets the related items included in the result set based on this field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ReadRequest">
            <summary>
            Represents the request for a read operation on Document objects and RDOs. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadRequest.Object">
            <summary>
            Gets or sets the RelativityObjectRef object to read. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadRequest.Fields">
            <summary>
            Gets or sets the fields to be read on the RelativityObject.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ReadResult">
            <summary>
            Represents the results of a read operation performed through the Object Manager service.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadResult.Message">
            <summary>
            Gets a string returned by a Pre Load event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadResult.Object">
            <summary>
            Gets a RelativityObject instance containing fields and their values that were read. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadResult.ObjectType">
            <summary>
            Gets or sets the Object Type for the RelativityObject.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.UpdateResult">
            <summary>
            Represents the results of an update operation performed the Object Manager service.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateResult.EventHandlerStatuses">
            <summary>
            Gets a collection of EventHandlerStatus objects containing information about event handler execution.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.UpdateRequest">
            <summary>
            Represents an update request for a Relativity Object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateRequest.Object">
            <summary>
            Gets or sets the RelativityObjectRef object to update.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateRequest.FieldValues">
            <summary>
            Gets or sets the fields to be updated on the RelativityObject.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.QueryRequest">
            <summary>
            Describes conditions, sorts and fields to be returned for a Query call
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ObjectType">
            <summary>
            Gets or sets the ObjectTypeRef for type of object referenced by the query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.Condition">
            <summary>
            Gets or sets the search criteria. It can be a simple, single-field condition or a complex expression made by combining conditions.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.Sorts">
            <summary>
            Gets or sets the sort order for view results specified as a collection of Sort objects. See <see cref="T:Relativity.Services.Sort">Sort</see>.
            </summary>
            <value>The sorts.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.RelationalField">
            <summary>
            Gets or sets the field used to include related items in query result. See <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef">FieldRef</see>.
            </summary>
            <value>The relational field.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.RowCondition">
            <summary>
            Gets or sets the row condition criteria.
            </summary>
            <remarks>
            The row condition can be a simple, single-field condition or a complex expression made by combining conditions. 
            It limits the result set returned after applying all other conditions and including the relational field. Currently, 
            this property only functions for the Pivot API.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.SearchProviderCondition">
            <summary>
            Gets or sets the search provider search condition. See <see cref="P:Relativity.Services.Objects.DataContracts.QueryRequest.SearchProviderCondition">SearchProviderCondition</see>
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.SampleParameters">
            <summary>
            Gets or sets the parameters used to execute a search provider query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.IncludeIDWindow">
            <summary>
            Gets the Window object containing the IDs of the objects included in the current results set. 
            This property is populated only when the IncludeIdWindow property is set to true on the inbound Query object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.RankSortOrder">
            <summary>
            Gets or sets the sorting direction of Rank column in the Relativity UI, as either ascending or descending. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.QueryHint">
            <summary>
            Gets or sets the QueryHint of the currently executing search. It is used to optimize the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.Fields">
            <summary>
            Gets or sets a collection of fields like a SELECT statement in an SQL query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.IsAdhocQuery">
            <summary>
            Gets or sets a Boolean value indicating whether the query engine should handle the search or view condition as a query type or simple condition. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ConvertNumberFieldValuesToString">
            <summary>
            Gets or sets a Boolean value indicating whether to convert the numbers returned in the query to text. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.IncludeNameInQueryResult">
            <summary>
            Gets or sets Boolean value indicating whether the DisplayText property on the RelativityObject object is populated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ExecutingSavedSearchID">
            <summary>
            Gets or sets the ID of the currently executing saved search. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ExecutingViewID">
            <summary>
            Gets or sets the ID of the currently executing view. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ActiveArtifactID">
            <summary>
            Gets or sets the Artifact ID of an item when available in the query results. This item is used to override the start position for the result page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.MaxCharactersForLongTextValues">
            <summary>
            Gets or sets the maximum number of characters returned in the query results for long text fields.  
            </summary>
            <remarks>
            The MaximumNumberOfCharactersSupportedByLongText instance setting determines this number. If a number isn’t not specified, the default is 1,000 characters.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.LongTextBehavior">
            <summary>
            Gets or sets the behavior used when a long text field exceeds the configured character limit.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.OperationOptions">
            <summary>
            Represents information about how an operation for a request is being called. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.OperationOptions.CallingContext">
            <summary>
            Gets or sets information about the web context from which the event handler is being called, such as the layout or page mode. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.UpdateOptions">
            <summary>
            Represents information about how an update request is performed. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateOptions.UpdateBehavior">
            <summary>
            Gets or set the behavior used when updating multiple choice and multiple object fields by replacing or merging values. By default, values are replaced.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.ChoiceExtensions">
            <summary>
            Provides a method for converting a fully hydrated Choice object into a ChoiceRef object. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.ChoiceExtensions.ToRef(Relativity.Services.Objects.DataContracts.Choice)">
            <summary>
            Converts a fully hydrated Choice object into a ChoiceRef object. 
            </summary>
            <param name="choice"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.ExpandoObjectExtensions">
            <summary>
            Provides methods for retrieving a representation of an ExpandoObject or its properties based on a corresponding key.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.ExpandoObjectExtensions.FixCaseForKey(System.Dynamic.ExpandoObject,System.String)">
            <summary>
            pass in a key, and get back the case sensitive representation that the expando object is using.
            </summary>
            <param name="expando"></param>
            <param name="key"></param>
            <returns>Returns the case-sensitive representation of an ExpandoObject corresponding to the key passed to this method.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.ExpandoObjectExtensions.GetPropertyWithKey``1(System.Dynamic.ExpandoObject,System.String,``0)">
            <summary>
            returns the exando object property corresponding to the (case insensitive) key passed in.
            </summary>
            <param name="expando"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <typeparam name="T"></typeparam>
            <returns>Returns a property of an ExpandoObject that corresponds to the case-sensitive key passed to this method.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.FieldExtensions">
            <summary>
            Provides a method for converting a fully hydrated Field object into a FieldRef object. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.FieldExtensions.ToRef(Relativity.Services.Objects.DataContracts.Field)">
            <summary>
            Converts a fully hydrated Field object into a FieldRef object. 
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.LayoutExtensions">
            <summary>
            Provides a method for converting a fully hydrated Layout object into a LayoutRef object. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.LayoutExtensions.ToRef(Relativity.Services.Objects.DataContracts.Layout)">
            <summary>
            Converts a fully hydrated Layout object into a LayoutRef object. 
            </summary>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.GuidListExtensions">
            <summary>
            Provides a method for retrieving the GUID for an object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.GuidListExtensions.GetOptionalGuid(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Retrieves the GUID for an object.
            </summary>
            <param name="guids"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.RelativityObjectExtensions">
            <summary>
            Provides a method for converting a fully hydrated RelativityObject into a RelativityObjectRef object. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.RelativityObjectExtensions.ToRef(Relativity.Services.Objects.DataContracts.RelativityObject)">
            <summary>
            Converts a fully hydrated RelativityObject into a RelativityObjectRef object.
            </summary>
            <param name="relativityObject"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.IObjectManager">
            <summary>
            IObjectManager interface exposes methods on the Relativity Object Manager web service used for reading and updating fields on Document objects and Relativity Dynamic Objects (RDOs), 
            as well as querying on Relativity objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QueryAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Searches for Workspaces, Documents, RDOs, and system types.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields, and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object. </param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
            <remarks>The QueryAsync() methods supports querying for the following system types: Application, Batch, Batch Sets, Choice, Client, Group, 
            Markup Set, User, Object Type, Tab, Folder, Layout, View, Workspace, Error, Field, Relativity Script, and Saved Search. </remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QueryAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Searches for Workspaces, Documents, RDOs, and system types, and reports the query execution progress.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields, and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">Contains a callback that reports query execution progress.</param>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QueryAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Searches for Workspaces, Documents, RDOs, and system types, reports the query execution progress, and provides a token used for canceling the query.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields, and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object. </param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">Used to request the cancellation of the object query.</param>
            <param name="progress">Contains a callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
            <remarks>The QueryAsync() methods supports querying for the following system types: Application, Batch, Batch Sets, Choice, Client, Group, Markup Set, User, 
            Object Type, Tab, Folder, Layout, View, Workspace, Error, Field, Relativity Script, and Saved Search. </remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.UpdateRequest)">
            <summary>
            Modifies all fields or a specified subset of fields on a Document object or Relativity Dynamic Object (RDO). 
            </summary>
            <param name="workspaceID"> Workspace ID of the workspace containing the artifact to be updated.</param>
            <param name="request">A request to update a Document object or Relativity Dynamic Object (RDO).</param>
            <returns>An UpdateResult instance with event handler statuses.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.UpdateRequest,Relativity.Services.Objects.DataContracts.UpdateOptions)">
            <summary>
            Modifies all fields or a specified subset of fields on a Document object or Relativity Dynamic Object (RDO), and uses any specified update options.
            </summary>
            <param name="workspaceID"> Workspace ID of the workspace containing the artifact to be updated.</param>
            <param name="request">A request to update a Document object or Relativity Dynamic Object (RDO).</param>
            <param name="operationOptions">An options object containing a calling context property providing information used to populate data for event handlers.</param>
            <returns>An UpdateResult instance with event handler statuses.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.ReadAsync(System.Int32,Relativity.Services.Objects.DataContracts.ReadRequest)">
            <summary>
            Retrieves all fields or a specified subset of fields on a Document object or Relativity Dynamic Object (RDO). 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be read.</param>
            <param name="request">A ReadRequest object containing fields to read on a RelativityObject.</param>
            <returns>A ReadResult instance returning the specified fields on the referenced Document object or RDO.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.ReadAsync(System.Int32,Relativity.Services.Objects.DataContracts.ReadRequest,Relativity.Services.Objects.DataContracts.OperationOptions)">
            <summary>
            Retrieves all fields or a specified subset of fields on a Document object or Relativity Dynamic Object (RDO). 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be read.</param>
            <param name="request">A ReadRequest object containing fields to read on a RelativityObject.</param>
            <param name="operationOptions">An options object containing a calling context property providing information used to populate data for event handlers.</param>
            <returns>A ReadResult instance returning the specified fields on the referenced Document object or RDO.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.ReadAsync(System.Int32,Relativity.Services.Objects.DataContracts.ReadRequest,Relativity.Services.Objects.DataContracts.ReadOptions)">
            <summary>
            Retrieves all fields or a specified subset of fields on a Document object or Relativity Dynamic Object (RDO). 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be read.</param>
            <param name="request">A ReadRequest object containing fields to read on a RelativityObject.</param>
            <param name="readOptions">An options object containing a calling context property providing information used to populate data for event handlers
            as well additional options for handling long text fields</param>
            <returns>A ReadResult instance returning the specified fields on the referenced Document object or RDO.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.DeleteRequest)">
            <summary>
            Deletes Document objects and their associated files, and RDOs.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="request">A request to delete a Document object or Relativity Dynamic Object (RDO).</param>
            <returns>Returns the results of a delete operation as an DeleteResult instance containing information about the deleted items.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.DeleteRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress})">
            <summary>
            Deletes Document objects and their associated files, and RDOs based on a list of identifiers, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="request">A request to delete a Document object or Relativity Dynamic Object (RDO).</param>
            <param name="cancel">Used to request cancel of the object delete execution.</param>
            <param name="progress">Contains a callback that reports query execution progress.</param>
            <returns>Returns the results of a delete operation as an ObjectDeleteResult instance containing information about the deleted items.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.DeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes Document objects and their associated files, and RDOs, as well as reports the query execution progress, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="request">A request to delete a Document object or Relativity Dynamic Object (RDO).</param>
            <param name="cancel">Used to request cancel of the object delete execution.</param>
            <returns>Returns the results of a delete operation as an ObjectDeleteResult instance containing information about the deleted items.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.DeleteRequest,System.IProgress{Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress})">
            <summary>
            Deletes Document objects and their associated files, and RDOs, as well as reports the query execution progress, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="request">A request to delete a Document object or Relativity Dynamic Object (RDO).</param>
            <param name="progress">Contains a callback that reports query execution progress.</param>
            <returns>Returns the results of a delete operation as an ObjectDeleteResult instance containing information about the deleted items.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.CreateRequest)">
            <summary>
            Creates a Relativity Dynamic Object (RDO) with the specified fields.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="request">A request to create a Relativity Dynamic Object (RDO).</param>
            <returns>A CreateResult instance containing event handler statuses, and a RelativityObject instance.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.CreateRequest,Relativity.Services.Objects.DataContracts.OperationOptions)">
            <summary>
            Creates a Relativity Dynamic Object (RDO) with the specified fields using a calling context.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="request">A request to create a Relativity Dynamic Object (RDO).</param>
            <param name="operationOptions">An object containing a calling context property providing information used to populate data for event handlers.</param>
            <returns>A CreateResult instance containing event handler statuses, and a RelativityObject instance.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QuerySlimAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Query for Workspaces, Documents, RDOs, and system types. This returns a slimmer payload aimed towards display of the query results in a grid.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QuerySlimAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Workspaces, Documents, RDOs, and system types. This returns a slimmer payload aimed towards display of the query results in a grid.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object. </param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QuerySlimAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Query for Workspaces, Documents, RDOs, and system types. This returns a slimmer payload aimed towards display of the query results in a grid.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object. </param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QuerySlimAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Workspaces, Documents, RDOs, and system types. This returns a slimmer payload aimed towards display of the query results in a grid.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.StreamLongTextAsync(System.Int32,Relativity.Services.Objects.DataContracts.RelativityObjectRef,Relativity.Services.Objects.DataContracts.FieldRef)">
            <summary>
            VOLATILE - 
            </summary>
            <param name="workspaceID"> Workspace ID of the workspace containing the object to be retrieved</param>
            <param name="exportObject"> A <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> of the document that contains the text to be streamed</param>
            <param name="longTextField">A <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> of the long text field that contains the text to be streamed</param>
            <returns>
            A <see cref="T:Relativity.Kepler.Transport.IKeplerStream">kepler stream</see>/> that contains the content of the selected long text field.
            This stream is the text encoded in either UTF16 for unicode-enabled fields or 
            </returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.InitializeExportAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32)">
            <summary>
            VOLATILE - 
            </summary>
            <param name="workspaceID"> Workspace ID of the workspace containing the data to export</param>
            <param name="queryRequest"> Query that specifies the data set to export.
            Includes ObjectType and Fields to be exported, query information to determine the set of objects to export, and an optional maximum length to export inline </param>
            <param name="start"> Record to begin export at </param>
            <returns> An ExportInitializationResults instance containing an export run ID, and a count of records to be exported </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Relativity.Services.Objects.IObjectManager.InitializeExportAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Guid,System.Int32)" -->
        <member name="M:Relativity.Services.Objects.IObjectManager.RetrieveNextResultsBlockFromExportAsync(System.Int32,System.Guid,System.Int32)">
            <summary>
            VOLATILE - 
            </summary>
            <param name="workspaceID"> Workspace ID of the workspace containing the data to export</param>
            <param name="runID"></param>
            <param name="settings"></param>
            <returns> The next block of export results, or an empty array if the export is complete </returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest)">
            <summary>
            Deletes a set of Document objects and their associated files, and RDOs based on a list of identifiers.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByObjectIdentifiers">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <returns>A MassDeleteResult instance containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Deletes a set of Document objects and their associated files, and RDOs based on a list of identifiers, returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByObjectIdentifiers">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassDeleteResult instance containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest,System.Threading.CancellationToken)">
            <summary>
            Cascade deletes a set of Document objects and their associated files, and RDOs based on a list of identifiers, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByObjectIdentifiers">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A MassDeleteResult instance containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Deletes a set of Document objects and their associated files, and RDOs based on a list of identifiers, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByObjectIdentifiers">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassDeleteResult instance containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest)">
            <summary>
            Deletes Document objects and their associated files, and RDOs based on a set of search or view conditions.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByCriteria">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <returns>A MassDeleteResult instance containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes Document objects and their associated files, and RDOs based on a set of search or view conditions, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByCriteria">Information about the set of RDOs to be deleted</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A MassDeleteResult instance containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Deletes Document objects and their associated files, and RDOs based on a set of search or view conditions, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByCriteria">Information about the set of RDOs to be deleted</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassDeleteResult instance containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Deletes Document objects and their associated files, and RDOs based on a set of search or view conditions.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByCriteria">Information about the set of RDOs to be deleted</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>Deletes Document objects and their associated files, and RDOs based on a set of search or view conditions, 
            provides a token used for canceling the operation, and returns progress information.
            </returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassCreateRequest)">
            <summary>
            Creates a set of Relativity Dynamic Objects (RDOs) with the specified fields.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="massRequest">A request to create multiple Relativity Dynamic Objects (RDOs).</param>
            <returns>A MassCreateResult instance containing a list of created RDOs and a message when an error occurs.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a set of Relativity Dynamic Objects (RDOs) with the specified fields.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="massRequest">A request to create multiple Relativity Dynamic Objects (RDOs).</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>Creates a list of Relativity Dynamic Objects (RDOs) with the specified fields, and provides a token used for canceling the operation.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassCreateRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Creates a set of Relativity Dynamic Objects (RDOs) with the specified fields.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="massRequest">A request to create multiple Relativity Dynamic Objects (RDOs).</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>Creates a list of Relativity Dynamic Objects (RDOs) with the specified fields, and returns progress information.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassCreateRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Creates a set of Relativity Dynamic Objects (RDOs) with the specified fields.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="massRequest">A request to create multiple Relativity Dynamic Objects (RDOs).</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>Creates a list of Relativity Dynamic Objects (RDOs) with the specified fields, provides a token used for canceling the operation, and returns progress information.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers by setting the fields to the same value.
            </summary>
            <remarks>
            A MassUpdateByObjectIdentifiersRequest object specifies the identifiers used to select a list of objects with the same type for updating. It also includes the same 
            values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to the user selecting the Checked or These option in 
            the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, uses any specified update options.
            </summary>
            <remarks>
            A MassUpdateByObjectIdentifiersRequest object specifies the identifiers used to select a list of objects with the same 
            type for updating. It also includes the same values for all object fields that are to be updated. In the Relativity UI, 
            this update operation is equivalent to the user selecting the Checked or These option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, provides a token used for canceling the operation.
            </summary>
            <remarks>
            A MassUpdateByObjectIdentifiersRequest object specifies the identifiers used to select a list of objects with the same type for updating. 
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the Checked or These option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, uses any specified update options and provides a token used for canceling the operation.
            </summary>
            <remarks>
            A MassUpdateByObjectIdentifiersRequest object specifies the identifiers used to select a list of objects with the same type for updating. 
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the Checked or These option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of 
            identifiers by setting the fields to the same value. Also, returns progress information.
            </summary>
            <remarks>
            A MassUpdateByObjectIdentifiersRequest object specifies the identifiers used to select a list of objects with the 
            same type for updating. It also includes the same values for all object fields that are to be updated. In the Relativity UI, 
            this update operation is equivalent to the user selecting the Checked or These option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, uses any specified update options and returns progress information.
            </summary>
            <remarks>
            A MassUpdateByObjectIdentifiersRequest object specifies the identifiers used to select a list of objects with the same type for updating. 
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the Checked or These option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <remarks>
            A MassUpdateByObjectIdentifiersRequest object specifies the identifiers used to select a list of objects with the same type for updating.
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is
            equivalent to the user selecting the Checked or These option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, uses any specified update options, provides a token used for canceling the 
            operation, and returns progress information.
            </summary>
            <remarks>
            A MassUpdateByObjectIdentifiersRequest object specifies the identifiers used to select a list of objects with the same type for updating. 
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the Checked or These option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match the search or view conditions by setting the fields to the same value.
            </summary>
            <remarks>
            A MassUpdateByCriteriaRequest object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to 
            the user selecting the All option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match the 
            search or view conditions by setting the fields to the same value. Also, uses any specified update options.
            </summary>
            <remarks>
            A MassUpdateByCriteriaRequest object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to 
            the user selecting the All option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="options">Specifies update behavior</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match the search 
            or view conditions by setting the fields to the same value. Also, provides a token used for canceling the operation.
            </summary>
            <remarks>
            A MassUpdateByCriteriaRequest object specifies the view or search conditions used to select a list of objects with the same type 
            for updating. It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update 
            operation is equivalent to the user selecting the All option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match the search or view conditions 
            by setting the fields to the same value. Also, uses any specified update options and provides a token used for canceling the operation.
            </summary>
            <remarks>
            A MassUpdateByCriteriaRequest object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to 
            the user selecting the All option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="options">Specifies update behavior</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match the search 
            or view conditions by setting the fields to the same value. Also, returns progress information.
            </summary>
            <remarks>
            A MassUpdateByCriteriaRequest object specifies the view or search conditions used to select a list of objects with the same type for 
            updating. It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation 
            is equivalent to the user selecting the All option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match the search or view conditions 
            by setting the fields to the same value. Also, uses any specified update options and returns progress information.
            </summary>
            <remarks>
            A MassUpdateByCriteriaRequest object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the All option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="options">Specifies update behavior</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match the search or view conditions by 
            setting the fields to the same value. Also, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <remarks>
            A MassUpdateByCriteriaRequest object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to 
            the user selecting the All option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match the search or view conditions 
            by setting the fields to the same value. Also, uses any specified update options, provides a token used for canceling the operation, 
            and returns progress information.
            </summary>
            <remarks>
            A MassUpdateByCriteriaRequest object specifies the view or search conditions used to select a list of objects with the same type for 
            updating. It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation 
            is equivalent to the user selecting the All option in the mass operations bar on a list page.
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Document objects or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="options">Specifies update behavior</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers by setting the fields to distinct values.
            </summary>
            <remarks>
            A MassUpdatePerObjectsRequest object specifies identifiers for a list of objects of the same type for updating. It also specifies a distinct value for each object 
            field that is to be updated. This action is like overlay behavior available through the Relativity Desktop Client (RDC).
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, uses any specified update options.
            </summary>
            <remarks>
            A MassUpdatePerObjectsRequest object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, provides a token used for canceling the operation.
            </summary>
            <remarks>
            A MassUpdatePerObjectsRequest object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, uses any specified update options and provides a token used for canceling the operation.
            </summary>
            <remarks>
            A MassUpdatePerObjectsRequest object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options"></param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, returns progress information.
            </summary>
            <remarks>
            A MassUpdatePerObjectsRequest object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, uses any specified update options and returns progress information.
            </summary>
            <remarks>
            A MassUpdatePerObjectsRequest object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="options"></param>
            <param name="massRequestPerObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <remarks>
            A MassUpdatePerObjectsRequest object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Document objects or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, uses any specified update options, provides a token used for canceling the 
            operation, and returns progress information.
            </summary>
            <remarks>
            A MassUpdatePerObjectsRequest object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            </remarks>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to create multiple Document objects or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options"></param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A MassUpdateResult instance with the number of updated objects and a message when any errors occur.</returns>
            <remarks>Process halts at first failure with no rollback</remarks>
        </member>
        <member name="T:Relativity.Services.Objects.IObjectModule">
            <summary>
            Object Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.Serialization.FRSerializer">
            <summary>
            Provides method for serializing and deserializing FieldRef objects. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FRSerializer.TransformForSerialize(Relativity.Services.Objects.DataContracts.FieldRef)">
            <summary>
            Converts the specified FieldRef object into an Object. 
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FRSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Converts the specified Object into a FieldRef object. 
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Serialization.FRVPSerializer">
            <summary>
            Provides method for serializing and deserializing FieldRefValuePair objects. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FRVPSerializer.TransformForSerialize(Relativity.Services.Objects.DataContracts.FieldRefValuePair)">
            <summary>
            Converts the specified FieldRefValuePair object into an Object. 
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FRVPSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Converts the specified Object into a FieldRefValuePair object. 
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Serialization.FVPSerializer">
            <summary>
            Provides method for serializing and deserializing FieldValuePair objects. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FVPSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Converts the specified Object into a FieldValuePair object. 
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FVPSerializer.GetPropertyFromData``1(System.String,System.Object)">
            <summary>
            Retrieves a specified property from the object containing data. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FVPSerializer.TransformForSerialize(Relativity.Services.Objects.DataContracts.FieldValuePair)">
            <summary>
            Converts the specified FieldValuePair object into an Object. 
            </summary>
            <param name="fvp"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Helpers.ObjectTypeRefHelper">
            <summary>
            Provides a method for deserializing a JSON response to ObjectTypeRef objects. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Helpers.ObjectTypeRefHelper.DeserializeObjectTypeRef(System.Object)">
            <summary>
            Deserializes a JSON response to ObjectTypeRef object. 
            </summary>
            <param name="objectTypeRef"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.DeleteProcessStateProgress">
            <summary>
            Represents the progress object for mass delete processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.DeleteProcessStateProgress.OperationsCompleted">
            <summary>
            Gets or sets the operations completed count.
            </summary>
            <value>
            The operations completed.
            </value>
        </member>
        <member name="P:Relativity.Services.DeleteProcessStateProgress.TotalOperations">
            <summary>
            Gets or sets the total operations count.
            </summary>
            <value>
            The total operations.
            </value>
        </member>
        <member name="M:Relativity.Services.DeleteProcessStateProgress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.DeleteProcessStateProgress"/> class.
            </summary>
        </member>
        <member name="M:Relativity.Services.DeleteProcessStateProgress.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.DeleteProcessStateProgress"/> class.
            </summary>
            <param name="totalOperations">The total operations count.</param>
            <param name="operationsCompleted">The operations completed count.</param>
        </member>
        <member name="T:Relativity.Services.Exceptions.SearchProviderInvalidSyntaxException">
            <summary>
            Exception type thrown by search providers when a query fails due to invalid syntax.
            </summary>
        </member>
        <member name="T:Relativity.Services.Exceptions.InvalidInputException">
            <summary>
            A ValidationException that includes validation errors to be displayed to the consumer
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldManager.IFieldModule">
            <summary>
            Field interface
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldManager.IFieldManager">
            <summary>
            Exposes methods on the Field Manager service used for setting overlay behavior, propagating field values, updating filter types, and performing other tasks with fields.
            </summary>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.RetrieveBeginBatesFieldsAsync(System.Int32)">
            <summary>
            Gets fields containing beginning Bates numbers.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <returns>A list of FieldRef objects.</returns>
            <remarks>A beginning Bates number is the first number used in the sequence of page level numbers for a production.</remarks>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.RetrieveArtifactViewFieldIdAsync(System.Int32,System.Int32)">
            <summary>
            Gets the identifier for a ViewField object associated with a specified field.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <param name="fieldArtifactId">The artifact ID of a field.</param>
            <returns>The Artifact ID of a ViewField object associated with the specified field.</returns>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.UpdateFilterTypeAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Modify the filter type for a field.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <param name="artifactViewFieldId">The Artifact ID of a ViewField object associated with the field.</param>
            <param name="filterType">The filter type to set.</param>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.SetOverlayBehaviorAsync(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Determines whether the overlay behavior replaces or merges a new value with the existing values in a field.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <param name="fieldArtifactId">The Artifact ID of a field.</param>
            <param name="fieldOverlayBehavior">Set this field to true if you want to merge a new value with existing field values, or set it to false if you want to replace the existing values.</param>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.SetPropagateToAsync(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Updates values in a group of related fields using propagation.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <param name="fieldArtifactId">The Artifact ID of a field.</param>
            <param name="relationalFieldArtifactIDs">List of Artifact IDs for the relational fields that a value should be propagated to.</param>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.RetrieveUniqueFieldValuesAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Executes a query for unique values in stored in fixed-length text fields.
            </summary>
            <remarks>
            It is recommended that you create an index on the database fields that you want to query.
            </remarks>
            <param name="workspaceId">The Artifact ID of the workspace containing the fields that you want to query on. Pass -1 to query on admin fields.</param>
            <param name="artifactTypeId">The identifier for the Artifact Type of the object associated with the field. See ArtifactType enumeration.</param>
            <param name="fieldName">The name of the fixed-length text field to be queried.</param>
            <returns>A list of unique values for the queried field.</returns>
        </member>
        <member name="T:Relativity.Services.Pivot.PivotExportResult">
            <summary>
            Represents results of a pivot export.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotExportResult.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotExportResult.Content">
            <summary>
            Gets or sets the content that is encoded with base-64 digits.
            </summary>
            <value>
            The content encoded with base-64 digits.
            </value>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotExportResult.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Relativity.Services.Pivot.PivotExportResult"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Relativity.Services.Pivot.PivotDateGrouping">
            <summary>
            Specifies how to summarize date-based data that is returned for a GroupBy or PivotOn field in a Pivot query.
            </summary>
            <remarks>
            To use a Date field for the PivotOn field, you must also use a Date field for the GroupBy field. In addition, to use the Month enumeration for a PivotOn field, you must use the Year enumeration for the GroupBy field.
            </remarks>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.Date">
            <summary>
            Summarizes data by calendar day, month, and year for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.Month">
            <summary>
            Summarizes data by calendar month for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.Year">
            <summary>
            Summarizes data by calendar year for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.YearMonth">
            <summary>
            Summarizes data by calendar month and year for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.Week">
            <summary>
            Summarizes data by each week for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.TwoWeeks">
            <summary>
            Summarizes data by each two weeks for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Pivot.PivotSettings">
            <summary>
            Represents the settings to use for a Pivot query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Pivot.PivotSettings.#ctor">
            <summary>
            Initializes a new instance of the PivotSettings class.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.ObjectSetQuery">
            <summary>
            Gets or sets a query that defines the base set of documents or objects to run a Pivot query against.
            </summary>
            <remarks>
            This property is helpful if you want to run a Pivot query against only a subset, instead of all, objects or documents in a workspace. By using this property, you can reference a Query object that specifies any conditions that documents or objects must meet to be queried by a Pivot query.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.ArtifactTypeID">
            <summary>
            Gets or sets the Relativity Artifact Type identifier (Artifact.ArtifactTypeID property) for the type of DTO to run a Pivot query against.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.GroupBy">
            <summary>
            Gets or sets the field to use as the Group By value in a Pivot query and result set. Grouping functionality (Field.AllowGroupBy property) must be enabled for a field before the field can be used as a GroupBy field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.PivotOn">
            <summary>
            Gets or sets the field to use as the Pivot On value in a Pivot query and result set. Pivot functionality (Field.AllowPivotOn property) must be enabled for a field before the field can be used as a PivotOn field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.GroupByDateGrouping">
            <summary>
            Gets or sets the time interval to use when calculating results for a GroupBy field, if the GroupBy field is a Date field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.PivotOnDateGrouping">
            <summary>
            Gets or sets the time interval to use when calculating results for a PivotOn field, if the PivotOn field is a Date field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.MaximumNumberOfColumns">
            <summary>
            Gets or sets the maximum number of columns that a Pivot query can return.
            </summary>
            <remarks>
            If no value is specified, the query uses the configuration value for the database. If the query attempts to return more than the maximum number of columns, an error occurs.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.MaximumNumberOfRows">
            <summary>
            Gets or sets the maximum number of rows that a Pivot query can return.
            </summary>
            <remarks>
            If no value is specified, the query uses the configuration value for the database. If the query attempts to return more than the maximum number of rows, an error occurs.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.Timeout">
            <summary>
            Gets or sets the maximum amount of time, in seconds, for running a Pivot query and calculating the results before timing out.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.RawDataOnly">
            <summary>
            Gets or sets a value that indicates whether to apply a Pivot view to the data returned by a Pivot query or to return only the data. If the value is true, only the data is returned.
            </summary>
        </member>
        <member name="T:Relativity.Services.Pivot.PivotResultSet">
            <summary>
            Represents the results of a Pivot query. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.Results">
            <summary>
            Provides a collection of data that meets the criteria specified in a Pivot query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.TotalCount">
            <summary>
            Gets the total number of rows returned by a Pivot query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.QueryToken">
            <summary>
            Reserved for internal use and not intended to be used.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.Success">
            <summary>
            Gets a value that indicates whether a Pivot query ran successfully.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.Message">
            <summary>
            Gets a message that indicates the status of a Pivot query, after the query stops running. If the query failed, the message contains information about the errors that occurred.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.MessageType">
            <summary>
            Gets a message type that indicates the status of the Pivot error after the query stops. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.PivotIdToDisplayValueMap">
            <summary>
            N-by-2 2D array of strings where N is the distict list of pivot "column" values, each individual array[0] is the pivot "id" value and array[1] is the pivot "display" value
            </summary>
        </member>
        <member name="T:Relativity.Services.Pivot.IPivotManager">
            <summary>
            IPivotManager interface enables interaction with Relativity Pivot. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteAsync(System.Int32,Relativity.Services.Pivot.PivotSettings)">
            <summary>
            Asynchronously executes a Pivot query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="settings">The PivotSettings object that defines the settings to use for the Pivot query.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteAsync(System.Int32,Relativity.Services.Pivot.PivotSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a Pivot query and implements cancellation support for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="settings">The PivotSettings object that defines the settings to use for the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteAsync(System.Int32,Relativity.Services.Pivot.PivotSettings,System.IProgress{System.String})">
            <summary>
            Asynchronously executes a Pivot query and implements a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="settings">The PivotSettings object that defines the settings to use for the Pivot query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteAsync(System.Int32,Relativity.Services.Pivot.PivotSettings,System.Threading.CancellationToken,System.IProgress{System.String})">
            <summary>
            Asynchronously executes a Pivot query and implements cancellation support and a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="settings">The PivotSettings object that defines the settings to use for the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteExportAsync(System.Int32,Relativity.Services.PivotProfile.Dashboard,Relativity.Services.Query)">
            <summary>
            Asynchronously exports into the Excel file a Dashboard Pivot queries.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="dashboard">The dashboard.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteExportAsync(System.Int32,Relativity.Services.PivotProfile.Dashboard,Relativity.Services.Query,System.Threading.CancellationToken)">
            <summary>
            Asynchronously exports into the Excel file a Dashboard Pivot queries and implements cancellation support for the export.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="dashboard">The dashboard.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteExportAsync(System.Int32,Relativity.Services.PivotProfile.Dashboard,Relativity.Services.Query,System.IProgress{System.String})">
            <summary>
            Asynchronously exports into the Excel file a Dashboard Pivot queries and implements a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="dashboard">The dashboard.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteExportAsync(System.Int32,Relativity.Services.PivotProfile.Dashboard,Relativity.Services.Query,System.Threading.CancellationToken,System.IProgress{System.String})">
            <summary>
            Asynchronously exports into the Excel file a Dashboard Pivot queries and implements cancellation support and a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="dashboard">The dashboard.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecutePivotProfileAsync(System.Int32,System.Int32,Relativity.Services.Query)">
            <summary>
            Asynchronously executes a Pivot query based on the settings of a specified Pivot profile.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains both the Pivot profile to use and the documents or objects to query.</param>
            <param name="pivotProfileId">The Artifact identifier of the Pivot profile to use for the Pivot query.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecutePivotProfileAsync(System.Int32,System.Int32,Relativity.Services.Query,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a Pivot query based on the settings of a specified Pivot profile and implements cancellation support for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains both the Pivot profile to use and the documents or objects to query.</param>
            <param name="pivotProfileId">The Artifact identifier of the Pivot profile to use for the Pivot query.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that documents or objects must meet to be queried by the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecutePivotProfileAsync(System.Int32,System.Int32,Relativity.Services.Query,System.IProgress{System.String})">
            <summary>
            Asynchronously executes a Pivot query based on the settings of a specified Pivot profile and implements a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains both the Pivot profile to use and the documents or objects to query.</param>
            <param name="pivotProfileId">The Artifact identifier of the Pivot profile to use for the Pivot query.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that documents or objects must meet to be queried by the Pivot query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecutePivotProfileAsync(System.Int32,System.Int32,Relativity.Services.Query,System.Threading.CancellationToken,System.IProgress{System.String})">
            <summary>
            Asynchronously executes a Pivot query based on the settings of a specified Pivot profile and implements cancellation support and a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains both the Pivot profile to use and the document or objects to query.</param>
            <param name="pivotProfileId">The Artifact identifier of the Pivot profile to use for the Pivot query.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that documents or objects must meet to be queried by the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.GetFieldsForGroupByAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns all fields that can be used to group data (Field.AllowGroupBy property) in a Pivot query. 
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains the fields.</param>
            <param name="artifactTypeId">The Artifact Type identifier of the DTO that the fields apply to. This is typically "10", which is the identifier for the Document object.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.GetFieldsForPivotOnAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns all fields that can be used to pivot data (Field.AllowPivotOn property) in a Pivot query. 
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains the fields.</param>
            <param name="artifactTypeId">The Artifact Type identifier of the DTO that the fields apply to. This is typically "10", which is the identifier for the Document object.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.UpdateProfileAsync(System.Int32,Relativity.Services.PivotProfile.PivotProfileRef)">
            <summary>
            Asynchronously update a pivot profile. 
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains the fields.</param>
            <param name="artifactTypeId">The Artifact Type identifier of the DTO that the fields apply to. This is typically "10", which is the identifier for the Document object.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.CreateProfileAsync(System.Int32,Relativity.Services.PivotProfile.PivotProfileRef)">
            <summary>
            Asynchronously Create a pivot profile. 
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains the fields.</param>
            <param name="artifactTypeId">The Artifact Type identifier of the DTO that the fields apply to. This is typically "10", which is the identifier for the Document object.</param>
        </member>
        <member name="T:Relativity.Services.Pivot.IPivotModule">
            <summary>
            Pivot Manager Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.View.ViewAccessStatus">
            <summary>
            Indicates whether a user has View permissions on the specified view, and whether a user has View permissions on all fields used in the search conditions on the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.View.ViewAccessStatus.Exists">
            <summary>
            Gets or sets a value indicating whether View exists.
            </summary>
            <value>
              <c>true</c> if exists; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.View.ViewAccessStatus.CanView">
            <summary>
            Gets or sets a value indicating whether View can be viewed.
            </summary>
            <value>
              <c>true</c> if View can be viewed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.View.ViewAccessStatus.CanViewCriteriaFields">
            <summary>
            Gets or sets a value  whether View criteria fields can be viewed.
            </summary>
            <value>
            <c>true</c> if all View criteria fields can be viewed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Relativity.Services.View.IViewManager">
            <summary>
            Defines methods for managing Views.
            </summary>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns the current settings for properties on a view.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace that contains the view.</param>
            <param name="viewArtifactID">Artifact ID of the view to read.</param>
            <returns>View settings as properties on a View object.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.CreateSingleAsync(System.Int32,Relativity.Services.View.View)">
            <summary>
            Asynchronously creates an instance of View in a workspace.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace where the view will be created.</param>
            <param name="viewDTO">An instance of a View object containing the property values used to create the view.</param>
            <returns>Artifact ID of the newly created view.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.UpdateSingleAsync(System.Int32,Relativity.Services.View.View)">
            <summary>
            Asynchronously modifies properties on a view.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace that contains the view.</param>
            <param name="viewDTO">An instance of View that contains properties on a view requiring updates.</param>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.GetViewOwnersAsync(System.Int32)">
            <summary>
            Asynchronously returns workspace users who can be assigned ownership of a view. Users must have view permissions to the view.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace.</param>
            <returns>List of UserRef objects representing users who can be assigned ownership of a view.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.GetObjectTypesAsync(System.Int32)">
            <summary>
            Asychronously returns list of object types in a workspace.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace.</param>
            <returns>List of object types as ObjectTypeRef objects.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.GetAccessStatusAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves information about whether a user has View permissions to a view, and to the fields used in search conditions on the view.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace that contains the view.</param>
            <param name="artifactID">Artifact ID of the view to get access status of.</param>
            <returns>ViewAccessStatus object that contains information about the user's ability to access the view.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.GetIsViewLockedAsync(System.Int32,Relativity.Services.View.View)">
            <summary>
            Asynchronously returns whether the view is contained in a locked application.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace that contains the view.</param>
            <param name="viewDTO">An instance of the View</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.View.IViewModule">
            <summary>
            View Interface.
            </summary>
        </member>
        <member name="T:Relativity.Services.MoveProcessStateProgress">
            <summary>
            Represents the progress object for mass move processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.MoveProcessStateProgress.OperationsCompleted">
            <summary>
            Gets or sets the operations completed count.
            </summary>
            <value>
            The operations completed.
            </value>
        </member>
        <member name="P:Relativity.Services.MoveProcessStateProgress.TotalOperations">
            <summary>
            Gets or sets the total operations count.
            </summary>
            <value>
            The total operations.
            </value>
        </member>
        <member name="M:Relativity.Services.MoveProcessStateProgress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.MoveProcessStateProgress"/> class.
            </summary>
        </member>
        <member name="M:Relativity.Services.MoveProcessStateProgress.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.MoveProcessStateProgress"/> class.
            </summary>
            <param name="totalOperations">The total operations count.</param>
            <param name="operationsCompleted">The operations completed count.</param>
        </member>
        <member name="T:Relativity.Services.DataGridCheckSyntax.IDataGridCheckSyntaxModule">
            <summary>
            Data Grid Check Syntax Module
            </summary>
        </member>
        <member name="T:Relativity.Services.DataGridCheckSyntax.IDataGridCheckSyntaxService">
            <summary>
            Data Grid Check Syntax Service
            </summary>
        </member>
        <member name="M:Relativity.Services.DataGridCheckSyntax.IDataGridCheckSyntaxService.GetCheckSyntaxEnabledAsync">
            <summary>
            Checks if the Check Syntax functionality is enabled for the current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.DataGridCheckSyntax.IDataGridCheckSyntaxService.SetCheckSyntaxEnabledAsync(System.Boolean)">
            <summary>
            Enables or disables the Check Syntax functionality for the current user
            </summary>
            <param name="enabled">Whether to enable or disable Check Syntax</param>
        </member>
        <member name="M:Relativity.Services.DataGridCheckSyntax.IDataGridCheckSyntaxService.CheckSyntaxAsync(System.String[])">
            <summary>
            Checks the input queries for incorrect syntax
            </summary>
            <param name="queries">A list of Data Grid queries to check</param>
            <returns>Check Syntax results</returns>
        </member>
        <member name="M:Relativity.Services.DataGridCheckSyntax.IDataGridCheckSyntaxService.GetContextualHelpLinkUrlAsync">
            <summary>
            Gets url for the DataGrid Search Help page
            </summary>
            <returns>Contextual HelpLinkURL</returns>
        </member>
        <member name="T:Relativity.Services.DataGridCheckSyntax.CheckSyntaxResult">
            <summary>
            Represents a list of Data Grid query syntax check results
            </summary>
        </member>
        <member name="P:Relativity.Services.DataGridCheckSyntax.CheckSyntaxResult.OverallWarning">
            <summary>
            An overall warning for the check syntax request
            </summary>
        </member>
        <member name="P:Relativity.Services.DataGridCheckSyntax.CheckSyntaxResult.WarningCount">
            <summary>
            The number of syntax warnings
            </summary>
        </member>
        <member name="P:Relativity.Services.DataGridCheckSyntax.CheckSyntaxResult.QueryWarnings">
            <summary>
            A list of syntax warnings
            </summary>
        </member>
        <member name="T:Relativity.Services.DataGridCheckSyntax.QuerySyntaxWarning">
            <summary>
            Represents a Data Grid syntax warning for a specific query
            </summary>
        </member>
        <member name="P:Relativity.Services.DataGridCheckSyntax.QuerySyntaxWarning.Query">
            <summary>
            The input query that caused the warning
            </summary>
        </member>
        <member name="T:Relativity.Services.DataGridCheckSyntax.SyntaxWarning">
            <summary>
            Represents a Data Grid syntax warning
            </summary>
        </member>
        <member name="P:Relativity.Services.DataGridCheckSyntax.SyntaxWarning.WarningText">
            <summary>
            The message associated with the warning
            </summary>
        </member>
        <member name="P:Relativity.Services.DataGridCheckSyntax.SyntaxWarning.HelpUrl">
            <summary>
            A link to provide contextual help related to the warning from help site
            </summary>
        </member>
        <member name="T:Relativity.Services.DocumentPrintData.IDocumentPrintDataModule">
            <summary>
            Document Print Data Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.DocumentPrintData.IDocumentPrintDataManager">
            <summary>
            Exposes methods on the Document Print Data web service.
            </summary>
        </member>
        <member name="M:Relativity.Services.DocumentPrintData.IDocumentPrintDataManager.GetDocumentPrintDataAsync(System.String,System.Int32)">
            <summary>
            Retrieves document print data given specific print options. 
            </summary>
            <remarks>
            GetDocumentPrintDataAsync() retrieves document print data in JSON format for a given set of print options. 
            </remarks>
            <param name="printOptions"></param>
            <param name="workspaceId"></param>
            <returns>A JSON object containing data necessary for Save As PDF</returns>
        </member>
        <member name="T:Relativity.Services.ResourcePool.ResourcePoolQueryResultSet">
            <summary>
            Resource Pool Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Agent.AgentQueryResultSet">
            <summary>
            Agent Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.ConditionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.ConditionExtensions.ToQueryString(Relativity.Services.Condition)">
            <summary>
            Translates a Query Condition object to a Query Condition string.
            </summary>
            <param name="condition">The Query Condition.</param>
            <returns>A string used as input to a Query Condition object.</returns>
        </member>
        <member name="T:Relativity.Services.Document.File">
            <summary>
            Represents a File in Relativity
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Guid">
            <summary>
            File's Guid
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Order">
            <summary>
            File's Order
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Type">
            <summary>
            File's Type
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.DocumentArtifactID">
            <summary>
            File's Document ArtifactID
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Rotation">
            <summary>
            File's Rotation
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Identifier">
            <summary>
            File's Identifier
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Location">
            <summary>
            File's Location
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.InRepository">
            <summary>
            Whether or not the file is in the Repository
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Size">
            <summary>
            File's Size
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Details">
            <summary>
            File's Details
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.CatalogInfo">
            <summary>
            This object contains the additional field information contained in the Field Catalog
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.FieldIdentifier">
            <summary>
            The Guid of the Catalog field
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.ExternalFieldName">
            <summary>
            The identifying name of the field in the Source (i.e. Invariant field name)
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.FriendlyName">
            <summary>
            The "friendly" (more readable) version of the field name
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.Description">
            <summary>
            A description of the nature of the information the field contains
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.DataType">
            <summary>
            The DataType of the field
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.Category">
            <summary>
            The Category of the field
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.Length">
            <summary>
            The Length of the field
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.IFieldMappingModule">
            <summary>
            Field Mapping Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.IFieldMapping">
            <summary>
            Exposes methods used to store and retrieve data for field mapping, including fields available for mapping and fields already mapped.
            </summary>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.ClearCachedDataAsync">
            <summary>
            Clears all cached data for Invariant, Relativity, and the field catalog. Used for testing purposes, and for clearing corrupted data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.GetAllMappedFieldsAsync(System.Int32,System.Guid[],System.Int32)">
            <summary>
            Returns a list of mapped Relativity fields.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="fieldsToAppend">An optional list of GUIDs corresponding to Relativity fields, which have field data returned for them regardless of whether 
            they are mapped to a data source. Only Invariant currently uses this field. For general use, send in the empty set ([]) for this parameter. </param>
            <param name="dataSourceId">The Artifact ID of the processing data source used to populate the mapped fields. Note: Set this value only if you want an 
            audit of the mapped fields added to the corresponding data source in Relativity. In all other cases, pass the integer 0 as the parameter.</param>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.GetAutomappedFieldGuidsAsync(System.Int32)">
            <summary>
            Returns an array of Guids corresponding to the Relativity fields that are automatically mapped by Invariant.
            </summary>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.IsFieldMappingAvailableAsync(System.Int32)">
            <summary>
            Returns a boolean flag indicating whether or not Field Mapping functionality is available.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <returns>True if the Field Mapping service is available, false otherwise.</returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.GetInvariantFieldsAsync(System.Int32,System.Boolean)">
            <summary>
            Retrieves an array of fields from Invariant that are available for field mapping.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="catalogFieldsOnly">A flag indicating whether only Catalog fields should be returned.</param>
            <returns>An array of MappableSourceField objects.</returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.ReadExternalMappingAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves an External Field Mapping for the given field artifact Id, if one exists.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="fieldArtifactId">The artifact identifier of the field to get mapping for.</param>
            <param name="fieldSource">The field source name (e.g. "Invariant").</param>
            <returns>An ExternalMapping object.</returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.UpdateExternalMappingAsync(System.Int32,Relativity.Services.FieldMapping.ExternalMapping)">
            <summary>
            Modifies or inserts a single field mapping record.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="model">An ExternalMapping object with the updated data.</param>
        </member>
        <member name="T:Relativity.Services.FieldMapping.ExternalMapping">
            <summary>
            This object encapsulates a mapping between a Relativity field and an External (e.g. Invariant) field.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.MappingId">
            <summary>
            The identifier of the database record containing the mapping between the Relativity Field and the data source field.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FieldArtifactId">
            <summary>
            The Artifact ID of the Relativity field being mapped.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FieldGuid">
            <summary>
            The Guid of the field in Relativity.
            </summary>
            <remarks>This property is only valid for a field that is part of a Relativity Application.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.RelativityFieldName">
            <summary>
            The name of the field as it is displayed in Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FieldTypeId">
            <summary>
            The ID of the Relativity Field Type.
            </summary>
            <remarks>
            Values correspond to the <a href="T_kCura_Relativity_Client_FieldType.htm">FieldType</a> enumeration.
            </remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.EnableDataGrid">
            <summary>
            A flag indicating whether a field is enabled for Data Grid. This flag is only valid for text fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.ExternalFieldName">
            <summary>
            The name of the field 
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.ExternalFieldSource">
            <summary>
            The name of the external data source (i.e. Invariant).
            </summary>
            <remarks>For calls to UpdateExternalMappingAsync, this property is required and must be non-null.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FriendlyName">
            <summary>
            The "user-friendly" name of the source field.
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.UseUnicodeEncoding">
            <summary>
            Indicates the field uses Unicode encoding.
            </summary>
            <remarks>This only applies to text fields, and a text field can only be mapped if this value is true.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.CatalogLength">
            <summary>
            The maximum length for a fixed-length Catalog Field
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.CurrentLength">
            <summary>
            The current maximum length of a fixed-length field in the Relativity database.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.ObjectType">
            <summary>
            Integer representing the field’s object type.
            </summary>
            <remarks>
            Values correspond to the <a href="T_kCura_Relativity_Client_ArtifactType.htm">ArtifactType</a> enumeration.
            Used for validation; only artifact type 10, which corresponds to the Document object, is valid for Field Mapping.
            </remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.IsArtifactBaseField">
            <summary>
            Boolean flag indicating if the field is a Base Field.
            </summary>
            <remarks>A Base field is a type of System field, and is not valid for Field Mapping.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FieldCategory">
            <summary>
            The Relativity-defined category of the field.
            </summary>
            <remarks>
            Values correspond to the <a href="T_kCura_Relativity_Client_FieldCategory.htm">FieldCategory</a> enumeration.
            The following categories are associated with system fields, and are therefor invalid for Field Mapping:
            AutoCreate, Batch, FolderName, FullText, GenericSystem, MarkupSetMarker, ParentArtifact, ProductionMarker, Reflected, MultiReflected
            </remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.AssociativeArtifactTypeID">
            <summary>
            The Artifact Type ID an associated object
            </summary>
            <remarks>
            Values correspond to the <a href="T_kCura_Relativity_Client_ArtifactType.htm">ArtifactType</a> enumeration.
            If the associated ArtifactTypeID is equal to Batch (8), the field isn't valid for Field Mapping.
            </remarks>
        </member>
        <member name="T:Relativity.Services.FieldMapping.MappableSourceField">
            <summary>
            An object to represent a mappable field from an outside data source (e.g. Invariant)
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.Category">
            <summary>
            The category of the metadata stored in the field.
            </summary>
            <remarks>Examples are Email (for fields like From, To, CC, BCC, etc.), Image (Orientation, Resolution, Apeture Value), Matter (File Name, File Type, File Size).</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.SourceName">
            <summary>
            The name of the field used by the external data source.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.FriendlyName">
            <summary>
            The "user-friendly" name of the source field.
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.Description">
            <summary>
            A verbose description of the data represented by the source field.
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.DataType">
            <summary>
            The type of data stored in the field.
            <remarks>Common data types are String, Int32, DateTime, Boolean, or Collection.</remarks>
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.MappedFields">
            <summary>
            A list of Relativity fields currently mapped to this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.Length">
            <summary>
            The minimum acceptable length for a fixed-length text source field.
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.HierarchyCollection`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyCollection`1.#ctor(System.Collections.Generic.IEnumerable{Relativity.Services.HierarchyExtensions.HierarchyNode{`0}})">
            <summary>
            
            </summary>
            <param name="hierarchy"></param>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyCollection`1.GetFlatChildren">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyCollection`1.GetAllItems">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.HierarchyExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyExtensions.AsHierarchy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``1})">
            <summary>
            Turns a flat list of items into a hierarchical data structure.  The root
            levels will be any object that have no value set for parentIdProperty. 
            </summary>
            <typeparam name="T">Type of the object</typeparam>
            <typeparam name="TProperty">The type of the Id property on the object</typeparam>
            <param name="allItems">Items to place in the hierarchy</param>
            <param name="idProperty">Used to get the objects Id</param>
            <param name="parentIdProperty">Used to get the objects parent Id</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyExtensions.ToNestedList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``1},System.Func{``0,``1})">
            <summary>
            
            </summary>
            <param name="allItems"></param>
            <param name="idProperty"></param>
            <param name="parentIdProperty"></param>
            <param name="childProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyExtensions.AsHierarchy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Func{``0,``1})">
            <summary>
            Returns a hierarchical data structure with the parent item as the root.
            </summary>
            <typeparam name="T">Type of the object</typeparam>
            <typeparam name="TProperty">The type of the Id property on the object</typeparam>
            <param name="allItems">Items to place in the hierarchy</param>
            <param name="idProperty">Used to get the objects Id</param>
            <param name="parentIdProperty">Used to get the objects parent Id</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.HierarchyNode`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.#ctor(`0,System.Collections.Generic.IEnumerable{Relativity.Services.HierarchyExtensions.HierarchyNode{`0}},System.Int32,System.Int64,System.Int64)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <param name="childNodes"></param>
            <param name="depth"></param>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Node">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.ChildNodes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.IsRoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.HasChildren">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Left">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Right">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetEnumerator1">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetFlatChildren">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetParents">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetParentsDescending">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Equals(Relativity.Services.HierarchyExtensions.HierarchyNode{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Equals(`0)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.CompareTo(Relativity.Services.HierarchyExtensions.HierarchyNode{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.HierarchySearcher`2">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchySearcher`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,`1},System.Func{`0,`1})">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="idProperty"></param>
            <param name="parentIdProperty"></param>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchySearcher`2.GetAllRoots">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchySearcher`2.GetChildren(`0)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchySearcher`2.GetItemsParent(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.IHierarchical`1">
            <summary>
            
            </summary>
            <typeparam name="TProperty"></typeparam>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.IHierarchical`1.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.IHierarchical`1.ItemId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.IHierarchyCollection`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.IHierarchySearcher`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.IHierarchySearcher`1.GetAllRoots">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.IHierarchySearcher`1.GetChildren(`0)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.IHierarchySearcher`1.GetItemsParent(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.INestedSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.INestedSet.Left">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.INestedSet.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.Notifications.MOTDRef">
            <summary>
            Message of the Day Reference
            </summary>
        </member>
        <member name="P:Relativity.Services.Notifications.MOTDRef.Message">
            <summary>
            Actual message that will dispalyed to users upon login
            </summary>
        </member>
        <member name="P:Relativity.Services.Notifications.MOTDRef.Enabled">
            <summary>
            Whether Message of the Day is enabled or not
            </summary>
        </member>
        <member name="T:Relativity.Services.Notifications.INotificationsModule">
            <summary>
            Notifications Module
            </summary>
        </member>
        <member name="T:Relativity.Services.Notifications.INotificationsManager">
            <summary>
            Interface of the Notifaction Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Notifications.INotificationsManager.ReadMOTDAsync">
            <summary>
            Reads the Message of the Day
            </summary>
            <returns>A MOTD reference that includes the Message and whether or not it is enabled</returns>
        </member>
        <member name="M:Relativity.Services.Notifications.INotificationsManager.UpdateMOTDAsync(Relativity.Services.Notifications.MOTDRef)">
            <summary>
            Update the Message of the Day
            </summary>
            <param name="motd">MOTD reference that specifies the new message or whether or not it is enabled</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Matter.MatterQueryResultSet">
            <summary>
            Matter Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Matter.IMatterModule">
            <summary>
            Matter Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Matter.IMatterManager">
            <summary>
            IMatterManager interface enables interaction with Matter.
            </summary>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.CreateSingleAsync(Relativity.Services.Matter.Matter)">
            <summary>
            Asynchronously creates an instance of Matter.
            </summary>
            <param name="matterDTO">Matter DTO</param>
            <returns>ArtifactID of the created Matter.</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.QueryAsync(Relativity.Services.Query)">
            <summary>
            Asynchronously query for a collection of Matter instances.
            </summary>
            <param name="query">Query</param>
            <returns>A MatterQueryResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.QueryAsync(Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously query for a collection of Matter instances.
            </summary>
            <param name="query">Query</param>
            <param name="length">Number of results to return.</param>
            <returns>A MatterQueryResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.QuerySubsetAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously query for a subset of a collection of Matter instances.
            </summary>
            <param name="queryToken">Search Query Token</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.ReadSingleAsync(System.Int32)">
            <summary>
            Asynchronously read a instance of Matter.
            </summary>
            <param name="matterArtifactID">ArtifactID of the Matter to read.</param>
            <returns>A Matter</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.DeleteSingleAsync(System.Int32)">
            <summary>
            Asynchronously deletes an instance of Matter.
            </summary>
            <param name="matterArtifactID">ArtifactID of the Matter to delete.</param>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.UpdateSingleAsync(Relativity.Services.Matter.Matter)">
            <summary>
            Asynchronously updates an instance of Matter.
            </summary>
            <param name="matterDTO">Matter to Update.</param>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.GetStatusChoicesForMatterAsync">
            <summary>
            Get the available status choices.
            </summary>
            <returns>List of available status choices.</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.GetClientsForMatterAsync">
            <summary>
            Get the available clients.
            </summary>
            <returns>List of the available clients.</returns>
        </member>
        <member name="T:Relativity.Services.ProcessStateProgress">
            <summary>
            Represents the progress object for mass processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.ProcessStateProgress.TotalCount">
            <summary>
            Represents the total number of items that the mass operation needs to process.
            </summary>
        </member>
        <member name="T:Relativity.Services.LoggingConfig.ILoggingConfigModule">
            <summary>
            Logging Configuration Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.LoggingConfig.ILoggingConfigurationManager">
            <summary>
            Exposes methods on Logging Configuration Manager service that manipulate configurations used by the Relativity logging framework.
            </summary>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingConfigurationManager.GetAllAsync">
            <summary>
            Retrieves a collection of all logging configurations in the EDDSLogging database.
            </summary>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingConfigurationManager.CreateAsync(Relativity.Services.LoggingConfig.Configuration)">
            <summary>
            Creates a new configuration or updates the properties of an existing one.
            </summary>
            <remarks>A configuration includes settings for logging information for a Relativity environment. The Logging Configuration Manager service 
            checks for a configuration with an ID that matches the Id property set in the object passed to the CreateAsync() method. If it finds a 
            configuration with this ID, then the service updates it with the values set on the Configuration object. 
            Otherwise, it uses the properties on the object to create a new logging configuration in the EDDSLogging database.</remarks>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingConfigurationManager.DeleteAsync(Relativity.Services.LoggingConfig.Configuration)">
            <summary>
            Deletes a logging configuration from the EDDSLogging database.
            </summary>
            <remarks>The DeleteAsync() method deletes the logging configuration with the ID that matches the value in the 
            Id property on the Configuration object passed to it.</remarks>
        </member>
        <member name="T:Relativity.Services.LoggingConfig.ILoggingSinkManager">
            <summary>
            Exposes methods on Sink Manager service that create and retrieve sink types supported by the Relativity logging framework.
            </summary>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingSinkManager.GetAllAsync">
            <summary>
            Returns list of all sinks that are seutp in relativity logging DB
            </summary>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingSinkManager.CreateFileSinkAsync(System.String,System.String,System.Int32)">
            <summary>
            Creates a sink that writes messages to a file.
            </summary>
            <param name="name">Name of sink</param>
            <param name="logFileLocation">Location of log file</param>
            <param name="maxFileSize">max file size</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingSinkManager.CreateDataGridSinkAsync(System.String,System.String)">
            <summary>
            Creates a sink that writes messages to Data Grid.
            </summary>
            <param name="name">Name of sink</param>
            <param name="dataGridEndPoint">Url for data grid</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingSinkManager.CreateSqlSinkAsync(System.String,System.String,System.String)">
            <summary>
            Creates a sink that writes messages to an SQL database.
            </summary>
            <param name="name">Name of the sink</param>
            <param name="connectionString">Connection string to sql source</param>
            <param name="tableName">Table for logging</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingSinkManager.CreateLogentriesSinkAsync(System.String,System.String)">
            <summary>
            Creates a sink that writes messages to the Logentries website.
            </summary>
            <param name="name">Name of sink</param>
            <param name="token">Token for logentries</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.LoggingConfig.ILoggingRuleManager">
            <summary>
            Exposes methods on Logging Rule Manager service used to manipulate logging levels used through the Relativity logging framework.
            </summary>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingRuleManager.GetAllAsync">
            <summary>
            Retrieves a collection of all logging rules in the EDDSLogging database.
            </summary>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingRuleManager.CreateAsync(Relativity.Services.LoggingConfig.Rule)">
            <summary>
            Creates a new logging or updates the properties of an existing one.
            </summary>
            <remarks>Rules control the logging level used in a Relativity environement. The Logging Rule Manager service checks for a rule with an ID 
            that matches the Id property set in the object passed to the CreateAsync() method. If it finds a rule with this ID, then the service 
            updates it with the values set on the Rule object. Otherwise, it uses the properties on the object to create a new logging rule in the 
            EDDSLogging database.</remarks>
        </member>
        <member name="M:Relativity.Services.LoggingConfig.ILoggingRuleManager.DeleteAsync(Relativity.Services.LoggingConfig.Rule)">
            <summary>
            Delete existing rule by ID
            </summary>
        </member>
        <member name="T:Relativity.Services.LoggingConfig.Configuration">
            <summary>
            Contains information about how logging is applied in your Relativity environment.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Configuration.Id">
            <summary>
            Gets or sets a database ID for the configuration.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Configuration.Order">
            <summary>
            Gets or sets the order in which the rule is applied. This value must be unique for each configuration.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Configuration.MachineName">
            <summary>
            Gets or sets an optional machine name.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Configuration.System">
            <summary>
            Gets or sets an optional system name.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Configuration.SubSystem">
            <summary>
            Gets or sets an optional subsystem name.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Configuration.Application">
            <summary>
            Gets or sets an optional application name.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Configuration.LoggingEnabled">
            <summary>
            Indicates whether logging is enabled for this configuration. 
            </summary>
        </member>
        <member name="T:Relativity.Services.LoggingConfig.Sink">
            <summary>
            Represents a sink that writes messages to a file, Data Grid, an SQL database, or Logentries website.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Sink.Name">
            <summary>
            Gets or set the name of the sink.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Rule.Id">
            <summary>
            Gets or sets a database ID for the rule. 
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Rule.Order">
            <summary>
            Gets or sets the order in which the rule is applied. This value must be unique for each rule. 
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Rule.MachineName">
            <summary>
            Gets or sets an optional machine name.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Rule.System">
            <summary>
            Gets or sets an optional system name.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Rule.SubSystem">
            <summary>
            Gets or sets an optional subsystem name.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Rule.Application">
            <summary>
            Gets or sets an optional application name.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Rule.LoggingLevel">
            <summary>
            Gets or sets the logging level for the rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.LoggingConfig.Rule.Sinks">
            <summary>
            Gets or sets a list of colon delimited sink names.
            </summary>
        </member>
        <member name="T:Relativity.Services.PasswordBank.IPasswordBankManager">
            <summary>
            Exposes methods on the Password Bank Manager web service used for interacting with document passwords.
            </summary>
        </member>
        <member name="M:Relativity.Services.PasswordBank.IPasswordBankManager.GetAllPasswordsAsync(System.Int32)">
            <summary>
            Retrieves all document passwords stored in the password bank for a specific workspace.
            </summary>
            <remarks>
            The GetAllPasswordsAsync() method retrieves and parses the Passwords fields for all password entry types. Password entry types include Lotus Notes , Email Encryption Certificates, and Passwords.
            </remarks>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <returns>A list of document passwords stored in the password bank for a specific workspace.</returns>
        </member>
        <member name="T:Relativity.Services.PasswordBank.IPasswordBankModule">
            <summary>
            Password Bank Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.#ctor">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.#ctor(System.String)">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
            <param name="duplicateSubject">A comma delimited list of subjects</param>
        </member>
        <member name="M:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.#ctor(System.String,System.Exception)">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
            <param name="duplicateSubject">A comma delimited list of subjects</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
            <param name="info">the serialization info</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.Message">
            <summary>
            The message indicating which subject is the problem.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.IFederatedInstanceManager">
            <summary>
            Connect this local Relativity instance to one or more remote Relativity instances for the
            purposes of navigation and data exchange.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.ReadAllAsync">
            <summary>
            Read all Federated Instances
            </summary>
            <returns>A collection of all Federated Instances the caller has permission to see</returns>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.ReadAsync(System.String)">
            <summary>
            Read a Federated Instance
            </summary>
            <param name="name">The name of the Federated Instance to read</param>
            <returns>The request Federated Instance</returns>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.CreateAsync(Relativity.Services.Security.Models.FederatedInstance)">
            <summary>
            Create a new Federated Instance
            </summary>
            <param name="instance">The Federated Instance to create</param>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.UpdateAsync(Relativity.Services.Security.Models.FederatedInstance)">
            <summary>
            Update an existing Federated Instance
            </summary>
            <param name="instance">The instance to update</param>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.DeleteAsync(System.String)">
            <summary>
            Remove a Federated Instance from this Relativity instance
            </summary>
            <param name="name">The name of the Federated Instance to delete</param>
        </member>
        <member name="M:Relativity.Services.Security.IHomeMenuManager.GetHomeMenuAsync">
            <summary>
            Retrieves the data model for the Relativity Home Menu
            </summary>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Security.Models.FederatedInstance">
            <summary>
            A remote instance of Relativity that is connected to this local instance
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.FederatedInstance.Name">
            <summary>
            The unique name for the Federated Instance
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.FederatedInstance.InstanceUrl">
            <summary>
            The single sign-on url to the Federated Instance
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ActiveDirectoryMethod.Account">
            <summary>
            The name of the user account in Active Directory.  Can be
            specified as a SAM Account (domain\username) or as a UPN
            (user@fully-qualified-domain)
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ActiveDirectoryMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ActiveDirectoryProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ActiveDirectoryProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.AuthProfile">
            <summary>
            Represents an authentication profile within Relativity
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.Id">
            <summary>
            The Id of the profile
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.SiteUri">
            <summary>
            The uri to the Relativity instance.  This property is required if you are using
            an external identity provider (OpenId Connect, WS-Federation or SAML).
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.IsGlobal">
            <summary>
            Whether this the Global auth profile for Relativity
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.Description">
            <summary>
            A description for the profile
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.Password">
            <summary>
            The Password Provider for this profile.  A null value means that password authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.IntegratedAuthentication">
            <summary>
            The Integrated Authentication Provider for this profile.  A null value means that Windows authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.ActiveDirectory">
            <summary>
            The Active Directory Provider for this profile.  A null value means that Active Directory authetnication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.ClientCertificate">
            <summary>
            The Client Certificate Provider for this profile.  A null value means that client certificate authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.RSA">
            <summary>
            The RSA Provider for this profile.  A null value means that client certificate authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.OpenIdConnectProviders">
            <summary>
            The list of OpenId Connect providers for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.SAML2Providers">
            <summary>
            The list of SAML2P providers for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateMethod.Name">
            <summary>
            A name of the matching certificate provider from the
            corresponding Auth Profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateMethod.Subject">
            <summary>
            The value to match against in the Common Name (CN) or 
            Subject Alternate Name (SAN) of the client certificate.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.Description">
            <summary>
            A description for this provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.DisplayOnLoginPage">
            <summary>
            Whether a button for this provider is displayed on the
            Relativity login page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.Caption">
            <summary>
            The caption text to be used for the button.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.HomeMenuModel">
            <summary>
            The data model for the Home Menu
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.HomeMenuModel.Instances">
            <summary>
            The list of instance destinations
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.HomeMenuModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.InstanceDestination">
            <summary>
            An instance that the user can navigate to
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.InstanceDestination.Name">
            <summary>
            The instance name
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.InstanceDestination.IsHome">
            <summary>
            Is this the current instance?
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.InstanceDestination.InstanceUri">
            <summary>
            The single sign-on uri to the destination instance
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.IntegratedAuthenticationMethod.Account">
            <summary>
            The name of the user account in Active Directory.  Can be
            specified as a SAM Account (domain\username) or as a UPN
            (user@fully-qualified-domain)
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.IntegratedAuthenticationMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.IntegratedAuthenticationProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.IntegratedAuthenticationProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.BulkInvitationResponse">
            <summary>
            Response object representing the result of a bulk user invitation call.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.BulkInvitationResponse.#ctor(System.Boolean,System.Collections.Generic.List{Relativity.Services.Security.Models.UserInviteError})">
            <summary>
            Create a new <see cref="T:Relativity.Services.Security.Models.BulkInvitationResponse"/>.
            </summary>
            <param name="success"></param>
            <param name="errors"></param>
        </member>
        <member name="P:Relativity.Services.Security.Models.BulkInvitationResponse.Success">
            <summary>
             True if the entire bulk invitation succeeded, false otherwise.
             </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.BulkInvitationResponse.Errors">
            <summary>
            A list of failed invitation emails per user and corresponding errors.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.LoginProfile">
            <summary>
            A collection of login methods that are configured for a given user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.UserId">
            <summary>
            The User Id for this profile
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.Password">
            <summary>
            The Password Method for this profile.  A null value means that password authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.IntegratedAuthentication">
            <summary>
            The Integrated Authentication Method for this profile.  A null value means that Windows authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.ActiveDirectory">
            <summary>
            The Active Directory Method for this profile.  A null value means that Active Directory authetnication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.ClientCertificate">
            <summary>
            The Client Certificate Method for this profile.  A null value means that client certificate authentication is disabled for this profile..
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.RSA">
            <summary>
            The RSA Method for this profile.  A null value means that client certificate authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.OpenIdConnectMethods">
            <summary>
            The OpenId Connect external login methods for the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.SAML2Methods">
            <summary>
            The SAML2P external login methods for the user.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.LoginProfileSetupResponse">
            <summary>
            Object representing the result of validating whether a user's 
            login profile allows them to authenticate with Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfileSetupResponse.Success">
            <summary>
            True if user has a method to authenticate with Relativity, false otherwise.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfileSetupResponse.Errors">
            <summary>
            On failure, set to a list of messages explaining why the failure occurred.
            Set to the empty list otherwise.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.LoginProfileSetupResponse.Successful">
            <summary>
            Create a successful <see cref="T:Relativity.Services.Security.Models.LoginProfileSetupResponse"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.Models.LoginProfileSetupResponse.Failed(System.Collections.Generic.List{System.String})">
            <summary>
            Create a failed <see cref="T:Relativity.Services.Security.Models.LoginProfileSetupResponse"/> with the given error messages.
            </summary>
            <param name="errors">Error messages to set on the response.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Security.Models.OAuth2Client">
            <summary>
            An OAuth2 Client that allows access to the environment
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.AccessTokenLifetimeInMinutes">
            <summary>
            How long the access token is valid in seconds
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Name">
            <summary>
            Unique name for the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Description">
            <summary>
            Description for the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Enabled">
            <summary>
            Determins if the client is allowed to be used for access
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Flow">
            <summary>
            The flow (grant type) supported by the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Id">
            <summary>
            The Id of the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.IsSystem">
            <summary>
            Determins if the client is backend client and not shown on the UI
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.RedirectUris">
            <summary>
            List of the Uris that the server will redirect to
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Secret">
            <summary>
            The current secret for the client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Scopes">
            <summary>
            List of Scopes this Client is allowed to request
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.ContextUser">
            <summary>
            The user that will be used for permissions and auditing
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.OAuth2Flow">
            <summary>
            Represents an OAuth2 flow.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.OpenIdConnectMethod">
            <summary>
            Represents a login method that is configured for a user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIdConnectMethod.ProviderName">
            <summary>
            The name of the OpenId Connect provider this login method belongs to
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIdConnectMethod.Subject">
            <summary>
            The "subject" for the method - typically the username
            that is associated with this user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIdConnectMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.OpenIDConnectProvider">
            <summary>
            Represents an OpenId Connect external identity provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Description">
            <summary>
            A description for this provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.DisplayOnLoginPage">
            <summary>
            Whether a button for this provider is displayed on the
            Relativity login page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Caption">
            <summary>
            The caption text to be used for the button.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.ClientId">
            <summary>
            The client identifier registered at the provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.ClientSecret">
            <summary>
            The client secret registered at the provider. Used only in code flow.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Authority">
            <summary>
            The uri to the external OpenID Connect provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Flow">
            <summary>
            The authentication flow used to communicate with the external provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.RedirectUri">
            <summary>
            The redirect uri that needs to get set at the identity provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.SubjectClaimType">
            <summary>
            The claim type to use for getting the user's subject mapping. Defaults to "sub".
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.Email">
            <summary>
            The e-mail address of the user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.InvalidLoginAttempts">
            <summary>
            Number of attempts to login that have not succeded.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.MustResetPasswordOnNextLogin">
            <summary>
            Controls whether the user is forced to reset their password after the next
            successful login
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.UserCanChangePassword">
            <summary>
            Whether the user can change their own password
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.PasswordExpirationInDays">
            <summary>
            The number of days a new password will be valid for until it expires.
            Setting this property to zero will cause the password never to expire.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.PasswordExpires">
            <summary>
            The date and time that the current password will expire.  This is a calcualted field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.TwoFactorInfo">
            <summary>
            Information used for two factor authenticaiton
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.TwoFactorMode">
            <summary>
            Determines when twofactor authentication will be used.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MinimumPasswordLength">
            <summary>
            The minimum password length allowed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MaximumPasswordLength">
            <summary>
            The maximum password length allowed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MaximumPasswordAgeInDaysDefaultValue">
            <summary>
            The default number of days until a user is forced to change their
            password.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.UsersCanChangePasswordDefaultValue">
            <summary>
            The default setting for whether users are allowed to change their
            password.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.AllowEmailPasswordRecovery">
            <summary>
            Determines whether e-mail password recovery is available for users.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.PasswordRecoveryRequestLimit">
            <summary>
            The maximm number of e-mail password recovery requests that 
            can be outstanding at one time for a given user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MaximumPasswordHistory">
            <summary>
            The number of passwords to remember when setting a new password.  A
            user cannot set their password to any previous password within the
            defined window size.  Setting this value to zero disabled password
            history checking.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MaximumInvalidLoginAttempts">
            <summary>
            The number of attempts a user is allowed to use before
            locking thier password method.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.AdditionalWorkFactor">
            <summary>
            A measure of the amount of time required to verify a password when
            a user logs into Relativity.
            </summary>
            <remarks>
            The work factor determines how robust your stored passwords hashes 
            are against brute-force attack.  Increasing this number will improve 
            the robustness of your password hashes.  However, increasing the work 
            factor by one will also double the amount of time needed to log in to 
            Relativity.  Adjusting the work factor allows you to choose the proper
            balance between security and usability.
            
            The value of this setting is added to the work factor for the Relativity
            environment.  Set this value to zero in order to use the default work 
            factor for the Relativity environment.  In most cases this will be 
            sufficient.
            </remarks>
        </member>
        <member name="T:Relativity.Services.Security.Models.ProtocolType">
            <summary>
            The type of Auth Provider, i.e. whether it is a local or external
            provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.RSAMethod.Subject">
            <summary>
            The RSA Login Name or E-mail Address to match against
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.RSAMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.RSAProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.RSAProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Method.ProviderName">
            <summary>
            The name of the SAML2 provider this login method belongs to
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Method.Subject">
            <summary>
            The "subject" for the method - typically the username
            that is associated with this user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Method.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.SAML2Provider">
            <summary>
            Represents a SAML2P external identity provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Description">
            <summary>
            A description for this provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Issuer">
            <summary>
            The Issuer of the Assertion.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Audience">
            <summary>
            The target that will receive the Assertion.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.RedirectUri">
            <summary>
            The redirect uri that needs to get set at the identity provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Certificate">
            <summary>
            The X.509 certificate in PEM format that contains the public key of the SAML identity provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.SubjectClaimType">
            <summary>
            The claim type to use for getting the user's subject mapping. Defaults to "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier".
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.TwoFactorMode">
            <summary>
            Sets when two factor authenticaiton will be used.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.UserInviteError">
            <summary>
            Invitation email error for a user and the status code of the error.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.UserInviteError.UserId">
            <summary>
            ID of the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.UserInviteError.Exception">
            <summary>
            Exception thrown when attempting to send the user an invitation email.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.UserInviteError.StatusCode">
            <summary>
            Status code for the error: 404 if the user doesn't exist or 
            isn't viewable by the caller, 403 if the caller doesn't have
            the necessary permissions to invite the user.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.IAuthProfileManager">
            <summary>
            Service for managing Authentication Profiles
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProfileManager.GetGlobalProfileAsync">
            <summary>
            Read the Global Auth Profile from the system
            </summary>
            <returns>An Auth Profile</returns>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProfileManager.SaveProfileAsync(Relativity.Services.Security.Models.AuthProfile)">
            <summary>
            Save an Auth Profile
            </summary>
            <param name="profile">The profile to save</param>
        </member>
        <member name="T:Relativity.Services.Security.IAuthProviderTypeManager">
            <summary>
            Web services for interacting with Authentication Provider Types
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProviderTypeManager.ReadAllAsync">
            <summary>
            Retrieves all Provider Types
            </summary>
            <returns>A list of Provider Types</returns>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProviderTypeManager.ReadAsync(System.String)">
            <summary>
            Retrieves a Provider Type
            </summary>
            <param name="name">The name of the Provider Type</param>
            <returns>The Provider Type</returns>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProviderTypeManager.UpdateAsync(System.String,System.Boolean)">
            <summary>
            Updates a Provider Type, allowing you to enable or disable Provider Types
            in the environment.  Disabling a Provider Type prevents all users from
            using that protocol during login.
            </summary>
            <param name="name">The name of the Provider Type</param>
            <param name="isEnabled">Whether the provider is disabled or not</param>
        </member>
        <member name="T:Relativity.Services.Security.ILoginProfileManager">
            <summary>
            Service for managing login methods that are configured for individual users.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.GetLoginProfileAsync(System.Int32)">
            <summary>
            Get a Login Method Profile for a given user.
            </summary>
            <param name="userId">The user id</param>
            <returns>The requested profile</returns>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.SaveLoginProfileAsync(Relativity.Services.Security.Models.LoginProfile)">
            <summary>
            Save a Login Method profile.
            </summary>
            <param name="profile">The profile to save</param>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.SetPasswordAsync(System.Int32,System.String)">
            <summary>
            Explicitly set a user's password.  Note that admins are not allowed to reset 
            Relativity users' passwords by default. (see Remarks for more information)
            </summary>
            <remarks>
            By default a user can only set their own password in Relativity.  Administrators
            are not allowed to set other users' passwords for security reasons.  Relativity 
            admins are encouraged to use the Invitation Email workflow instead of
            explicitly managing user passwords.
            
            If desired, Relativity can be configured to allow administrators to directly
            manage user passwords.  See the Relativity documentation for more information.
            </remarks>
            <param name="userId">The user id</param>
            <param name="password">The new password for the user.  Passwords must meet 
            the password complexity criteria configured for this environment.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.SendInvitationAsync(System.Int32)">
            <summary>
            Sends an Invitation Workflow e-mail to the specified user.
            </summary>
            <param name="userId">The user id</param>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.SendBulkInvitationAsync(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Sends an Invitation Workflow e-mail to each specified user.
            </summary>
            <param name="userIdList">The list of users</param>
            <returns>list of Invitation errors</returns>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.VerifyBulkInvitationAsync(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Verifies an Invitation Workflow without sending an email.
            </summary>
            <param name="userIdList">The list of users</param>
            <returns>list of Invitation errors</returns>
        </member>
        <member name="T:Relativity.Services.Security.IOAuth2ClientManager">
            <summary>
            Service for managing OAuth2 Clients
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.ReadAllAsync">
            <summary>
            Read all OAuth2 Clients
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.ReadAsync(System.String)">
            <summary>
            Read an OAuth2 Client by Id.
            </summary>
            <param name="id">The Id of the OAuth2 Client to read.</param>
            <returns>The requested profile</returns>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.CreateAsync(System.String,Relativity.Services.Security.Models.OAuth2Flow,System.Collections.Generic.IEnumerable{System.Uri},System.Nullable{System.Int32})">
            <summary>
            Create a new OAuth2 Client.
            </summary>
            <param name="name">The Client's Name.</param>
            <param name="flow">The OAuth2 Flow for the Client.</param>
            <param name="redirectUris">The redirect Uris for the Client.</param>
            <param name="contextUser">The user that will be used in the context of this Client.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.CreateAsync(Relativity.Services.Security.Models.OAuth2Client)">
            <summary>
            Create a new OAuth2 Client
            </summary>
            <param name="newClient">the new Client to create</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.SaveAsync(Relativity.Services.Security.Models.OAuth2Client)">
            <summary>
            Save an OAuth2 Client.
            </summary>
            <param name="client">The OAuth2 Client to save.</param>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.DeleteAsync(System.String)">
            <summary>
            Delete an OAuth2 Client.
            </summary>
            <param name="id">The Id of the OAuth2 Client to delete.</param>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.RegenerateSecretAsync(System.String)">
            <summary>
            Generate a new secret for an OAuth2 Client.  All previous secrets are immediately invalidated.
            </summary>
            <param name="id">The Id of the OAuth2 Client.</param>
            <returns>The new secret.</returns>
        </member>
        <member name="T:Relativity.Services.Permission.IPermissionManager">
            <summary>
            Permission Manager.
            </summary>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminGroupSelectorAsync">
            <summary>
            Get Admin GroupSelector.
            </summary>
            <returns>GroupSelector</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.AddRemoveAdminGroupsAsync(Relativity.Services.Permission.GroupSelector)">
            <summary>
            Add and/or remove Admin groups.
            </summary>
            <param name="groupSelector">Collection of Groups to add and remove.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceGroupSelectorAsync(System.Int32)">
            <summary>
            Get Workspace GroupSelector.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <returns>GroupSelector</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.AddRemoveWorkspaceGroupsAsync(System.Int32,Relativity.Services.Permission.GroupSelector)">
            <summary>
            Add and/or remove workspace groups.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="groupSelector">Collection of Groups to add and remove.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemGroupSelectorAsync(System.Int32,System.Int32)">
            <summary>
            Get Item GroupSelector.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="artifactID">Item ArtifactID.</param>
            <returns>GroupSelector</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.AddRemoveItemGroupsAsync(System.Int32,System.Int32,Relativity.Services.Permission.GroupSelector)">
            <summary>
            Add and/or remove item groups.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="artifactID">Item ArtifactID.</param>
            <param name="groupSelector">Collection of Groups to add and remove.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminGroupPermissionsAsync(Relativity.Services.Group.GroupRef)">
            <summary>
            Get Admin Group Permissions.
            </summary>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetAdminGroupPermissionsAsync(Relativity.Services.Permission.GroupPermissions)">
            <summary>
            Set Admin Group Permissions.
            </summary>
            <param name="groupPermissions">Group Permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceGroupPermissionsAsync(System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Workspace Group Permissions.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetWorkspaceGroupPermissionsAsync(System.Int32,Relativity.Services.Permission.GroupPermissions)">
            <summary>
            Set Workspace Group Permissions.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="groupPermissions">Group Permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemGroupPermissionsAsync(System.Int32,System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Item Group Permissions.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="artifactID">Item ArtifactID.</param>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetItemGroupPermissionsAsync(System.Int32,Relativity.Services.Permission.GroupPermissions)">
            <summary>
            Set Item Group Permissions.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="groupPermissions">Group Permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemLevelSecurityAsync(System.Int32,System.Int32)">
            <summary>
            Get Item Level Security settings for a given ArtifactID.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="artifactID">Item ArtifactID.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemLevelSecurityListAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns a dictionary of item-level security settings objects for the specified Relativity artifacts. 
            Inputs include the workspace ArtifactID and a collection of ArtifactIDs. 
            For admin artifacts, specify -1 as the workspace ArtifactID.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID</param>
            <param name="artifactIDs">Collection of ArtifactIDs</param>
            <returns>A collection of ItemLevelSecurity with current value for each specified artifact.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetItemLevelSecurityAsync(System.Int32,Relativity.Services.Permission.ItemLevelSecurity)">
            <summary>
            Set Item Level Security settings for a given ArtifactID.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="itemLevelSecurity">ItemLevelSecurity.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminGroupUsersAsync(Relativity.Services.Group.GroupRef)">
            <summary>
            Get Admin Group Users.
            </summary>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceGroupUsersAsync(System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Workspace Group Users.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemGroupUsersAsync(System.Int32,System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Item Group Users.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            /// <param name="artifactID">Item ArtifactID</param>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.CreateSingleAsync(System.Int32,Relativity.Services.Permission.Permission)">
            <summary>
            Asynchronously create a new permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the new Permission belongs to.</param>
            <param name="permissionDTO">Permission DTO.</param>
            <returns>ID of the new Permission.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Asynchronously queries for Permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the Permission is under.</param>
            <param name="query">Query.</param>
            <returns>A PermissionQueryResultSet.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously queries for Permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the Permission is under.</param>
            <param name="query">Query.</param>
            <param name="length">Number of results to return.</param>
            <returns>A PermissionQueryResultSet.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously queries for a subset of a collection of Permission instances.
            </summary>
            <param name="workspaceArtifactID">Workspace the Permission is under.</param>
            <param name="queryToken">Search Query Token.</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns>A PermissionQueryResultSet.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously read a single Permission instance.
            </summary>
            <param name="workspaceArtifactID">Workspace the search Permission is under.</param>
            <param name="permissionID">ID of the Permission to Read.</param>
            <returns>A Permission</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously delets a Permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the search Permission is under.</param>
            <param name="permissionID">ID of the Permission to delete.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.UpdateSingleAsync(System.Int32,Relativity.Services.Permission.Permission)">
            <summary>
            Asynchronously updates a Permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the search Permission is under.</param>
            <param name="permissionDTO">Permission DTO to update.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef})">
            <summary>
            Indicates a given permission is selected. (ArtifactTypeID)
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <returns>A collection of permissions and the current value.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef},System.Int32)">
            <summary>
            Indicates a given permission is selected. (ItemLevelSecurity on an ArtifactID of a given permission ArtifactTypeID)
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <param name="artifactID">Artifact ID.</param>
            <returns>A collection of permissions and the current value.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedListAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns the current user’s permission to the specified relativity artifacts as a dictionary that maps the ArtifactID to the permissions values. 
            Inputs include the workspace ArtifactID, a collection of PermissionRef objects, and a collection of ArtifactIDs. 
            To return admin-level artifact permissions, specify -1 as the workspace ArtifactID.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <param name="artifactIDs">Collection of Artifact IDs.</param>
            <returns>A collection of permissions with current value for each specified artifact.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedForGroupAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef},Relativity.Services.Group.GroupRef)">
            <summary>
            Indicates a given permission is selected. (ArtifactTypeID for a given Group)
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <param name="group">Group DTO.</param>
            <returns>A collection of permissions and the current value.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminOperationPermissionSelectedListAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Indicates if a given admin permission is selected.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissionIds">Collection of Permission identifiers.</param>
            <returns>A collection of permissions and if it is selected.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedForGroupAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef},Relativity.Services.Group.GroupRef,System.Int32)">
            <summary>
            Indicates a given permission is selected. (ItemLevelSecurity on an ArtifactID of a given permission ArtifactTypeID for a given Group)
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <param name="artifactID">Artifact ID.</param>
            <param name="group">Group DTO.</param>
            <returns>A collection of permissions and the current value.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetPermissionSelectedForGroupAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionValue},Relativity.Services.Group.GroupRef)">
            <summary>
            Set the Selected value for a given group permission.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissionValues">A collection of PermissionValues with the value to be set for the permission.</param>
            <param name="group">Group DTO.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetPermissionSelectedForGroupAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionValue},Relativity.Services.Group.GroupRef,System.Int32)">
            <summary>
            Set the Selected value for a given group permission.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissionValues">A collection of PermissionValues with the value to be set for the permission.</param>
            <param name="group">Group DTO.</param>
            <param name="artifactID">Artifact ID.</param>
        </member>
        <member name="T:Relativity.Services.Permission.IPermissionModule">
            <summary>
            Permission Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.PivotManager.Models.PivotExecutionFailureException">
            <summary>
            Represents exceptions that occur when a Pivot query fails during execution.
            </summary>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionFailureException.#ctor">
            <summary>
            Initializes a new instance of the PivotExecutionFailureException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionFailureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PivotExecutionFailureException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PivotExecutionFailureException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the PivotExecutionFailureException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.PivotManager.Models.PivotExecutionValidationException">
            <summary>
            Represents exceptions that occur when a request to run a Pivot query contains invalid parameters.
            </summary>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PivotExecutionValidationException class with an error message that describes the exception.
            </summary>
            <param name="reasonForInvalidation">Provides information about why the current exception occurred.</param>
        </member>
        <member name="T:Relativity.Services.Serialization.IChoiceRefHelper">
            <summary>
            An interface describing how to deserialize choices from untyped objects to ChoiceRef
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IChoiceRefHelper.DeserializeChoiceRef(System.Object)">
            <summary>
            Turn an object into a ChoiceRef.  An ArtifactID greater than 0 or at least 1 valid Guid are required or a ServiceSerializationException is thrown
            </summary>
            <param name="choiceObject">a serialized ChoiceRef</param>
            <returns>A ChoiceRef based on the input parameter</returns>
        </member>
        <member name="M:Relativity.Services.Serialization.IChoiceRefHelper.DeserializeChoiceRefEnumerable(System.Object)">
            <summary>
            Turn an object into an IEnumerable of ChoiceRefs.  If the object can't deserialize it will return an empty Enumerable.
            </summary>
            <param name="choiceListObjects">An untyped object that can be transformed into an IEnumerable of ChoiceRefs</param>
            <returns>An IEnumerable of ChoiceRefs</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.ChoiceRefHelper">
            <summary>
            Utilities for deserializing ExpandoObjects into ChoiceRefs
            </summary>
        </member>
        <member name="T:Relativity.Services.Serialization.IDateHelper">
            <summary>
            An interface that can be used to deserialize date field values
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IDateHelper.DeserializeDate(System.Object)">
            <summary>
            Turn an object into a DateTime
            </summary>
            <param name="dateObject">A serialized DateTime</param>
            <returns>A DateTime based on the input parameter</returns>
        </member>
        <member name="M:Relativity.Services.Serialization.IDateHelper.IsValidDate(System.Object)">
            <summary>
            Implementations of this method should decide if an input parameter should be deserialized or throw a validation exception
            </summary>
            <param name="dateObject"></param>
            <returns>true if the dateObject should be deserialized</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.DateHelper">
            <summary>
            Utilities for deserializing ExpandoObjects to DateTimes
            </summary>
        </member>
        <member name="T:Relativity.Services.Serialization.IFileRefHelper">
            <summary>
            An interface describing how to deserialize  files from untyped objects to FileRefs
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IFileRefHelper.DeserializeFileRef(System.Object)">
            <summary>
            Turn and object into a FileRef.  A FileId field is required, otherwise a ServiceSerializationException is thrown
            </summary>
            <param name="value">a serialized FielRef.</param>
            <returns>a FileRef based on the input parameter</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.FileRefHelper">
            <summary>
            Utitlites for deserializeing ExpandoObjects into FileRefs
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.Foundation.IObjectTypeRefHelper.DeserializeObjectTypeRef(System.Object)">
            <summary>
            Turn an object into a ObjectTypeRef.
            </summary>
            <param name="objectTypeRef">a serialized ObjectTypeRef</param>
            <returns>A ObjectTypeRef based on the input parameter</returns>
        </member>
        <member name="M:Relativity.Services.Serialization.IObjectTypeRefHelper.DeserializeObjectTypeRef(System.Object)">
            <summary>
            Turn an object into a ObjectTypeRef.
            </summary>
            <param name="objectTypeRef">a serialized ObjectTypeRef</param>
            <returns>A ObjectTypeRef based on the input parameter</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.QuerySerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.QuerySerializer.TransformForSerialize(Relativity.Services.Query)">
            <summary>
            Transforms the model for serialization
            </summary>
            <param name="model">Model to transform</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Serialization.QuerySerializer.TransformForDeserialize(System.Object)">
            <summary>
            Transforms the data for deserialzation
            </summary>
            <param name="data">Data to transform</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Serialization.SortSerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.SortSerializer.TransformForSerialize(Relativity.Services.Sort)">
            <summary>
            Transforms the model for serialization
            </summary>
            <param name="model">Model to transform</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Serialization.SortSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Transforms the data for deserialzation
            </summary>
            <param name="data">Data to transform</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Serialization.SortSerializer.GetSortEnum(System.Object)">
            <summary>
            Get a Sort Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A Sort value.</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.IUserRefHelper">
            <summary>
            An interface describing how to deserialize users from untyped objects to UserRefs
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IUserRefHelper.DeserializeUserRef(System.Object)">
            <summary>
            Turn an object into a UserRef.
            </summary>
            <param name="value">a serialized UserRef</param>
            <returns>a UserRef based on the input parameter</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.UserRefHelper">
            <summary>
            Utilities for deserializing ExpandoObjects into UserRefs
            </summary>
        </member>
        <member name="T:Relativity.Services.User.IUserManager">
            <summary>
            IPivotManager interface enables interaction with Relativity Pivot. 
            </summary>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveCurrentAsync(System.Int32)">
            <summary>
            Asynchronously retrieves the current user.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveCurrentAclUserIdAsync(System.Int32)">
            <summary>
            Asynchronously retrieves the current acl user.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllAndDeletedAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace including administrators and deleted users.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace including administrators.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllActiveAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllActiveAsync(System.Int32,System.Boolean)">
            <summary>
            Asynchronously retrieves a list of users in a workspace
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query</param>
            <param name="includeCurrentUser">Whether the current user should be included in the results; False would be for instances like coding docs</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllWithRelativityAccessAsync">
            <summary>
            Asynchronously retrieves a list of users from EDDS that have Relativity access.
            </summary>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllWithRelativityAccessAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace that have Relativity access. 
            </summary>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllActiveWithLimitAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace. If the list exceeds configured limit of users, no users will be returned.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
        </member>
        <member name="T:Relativity.Services.User.IUserModule">
            <summary>
            User Manager Interface
            </summary>
        </member>
    </members>
</doc>
